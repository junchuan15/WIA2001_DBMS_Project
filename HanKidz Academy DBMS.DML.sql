--INSERT DUMMY DATA INTO EVERY TABLE
INSERT ALL
INTO PARENT (PRT_ID, PRT_FULLNAME, PRT_GENDER, PRT_DATE_OF_BIRTH, PRT_AGE, PRT_CONTACT_NO, PRT_ADDRESS, PRT_EMAIL, PRT_RACE, RELATIONSHIP_WTH_STD, PRT_JOB)
VALUES('PR0001', 'Ong Ming Heng', 'M', TO_DATE('1980-06-20', 'YYYY-MM-DD'), 43, '01135538789', '12 Jalan Merdeka, Kuala Lumpur', 'mingheng66@gmail.com', 'Chinese', 'Father', 'Engineer')
INTO PARENT (PRT_ID, PRT_FULLNAME, PRT_GENDER, PRT_DATE_OF_BIRTH, PRT_AGE, PRT_CONTACT_NO, PRT_ADDRESS, PRT_EMAIL, PRT_RACE, RELATIONSHIP_WTH_STD, PRT_JOB)
VALUES('PR0002', 'Lee Yan Fang', 'F', TO_DATE('1982-09-15', 'YYYY-MM-DD'), 41, '0198765432', '9B, Lorong Medan Tuanku, Petaling Jaya', 'leeyanfang@gmail.com', 'Chinese', 'Mother', 'Teacher')
INTO PARENT (PRT_ID, PRT_FULLNAME, PRT_GENDER, PRT_DATE_OF_BIRTH, PRT_AGE, PRT_CONTACT_NO, PRT_ADDRESS, PRT_EMAIL, PRT_RACE, RELATIONSHIP_WTH_STD, PRT_JOB)
VALUES('PR0003', 'Tan Mei Ling', 'F', TO_DATE('1985-03-08', 'YYYY-MM-DD'), 38, '01154237796', '78, Lorong 5, Jalan Damai, Kuala Lumpur', 'meiling@gmail.com', 'Chinese', 'Mother', 'Shopkeeper')
INTO PARENT (PRT_ID, PRT_FULLNAME, PRT_GENDER, PRT_DATE_OF_BIRTH, PRT_AGE, PRT_CONTACT_NO, PRT_ADDRESS, PRT_EMAIL, PRT_RACE, RELATIONSHIP_WTH_STD, PRT_JOB)
VALUES('PR0004', 'Rajendra Kumar a/l Subramaniam', 'M', TO_DATE('1988-11-12', 'YYYY-MM-DD'), 35, '0187654321', '101 Jalan Sentosa, Kota Damansara', 'rajendra.kumar@gmail.com', 'Indian', 'Father', 'Doctor')
INTO PARENT (PRT_ID, PRT_FULLNAME, PRT_GENDER, PRT_DATE_OF_BIRTH, PRT_AGE, PRT_CONTACT_NO, PRT_ADDRESS, PRT_EMAIL, PRT_RACE, RELATIONSHIP_WTH_STD, PRT_JOB)
VALUES('PR0005', 'Loh Kun Ling', 'F', TO_DATE('1990-05-03', 'YYYY-MM-DD'), 33, '0123986340', '4B, Ken3, Jalan Harmoni, Petaling Jaya', 'ling6694@gmail.com', 'Chinese', 'Mother', 'Designer')
INTO PARENT (PRT_ID, PRT_FULLNAME, PRT_GENDER, PRT_DATE_OF_BIRTH, PRT_AGE, PRT_CONTACT_NO, PRT_ADDRESS, PRT_EMAIL, PRT_RACE, RELATIONSHIP_WTH_STD, PRT_JOB)
VALUES('PR0006', 'Muhammad Ali bin Hassan', 'M', TO_DATE('1978-02-18', 'YYYY-MM-DD'), 45, '0199867239', '88 Jalan Bahagia, Kuala Lumpur', 'muhammad.ali@gmail.com', 'Malay', 'Father', 'Electric Technician')
INTO PARENT (PRT_ID, PRT_FULLNAME, PRT_GENDER, PRT_DATE_OF_BIRTH, PRT_AGE, PRT_CONTACT_NO, PRT_ADDRESS, PRT_EMAIL, PRT_RACE, RELATIONSHIP_WTH_STD, PRT_JOB)
VALUES('PR0007', 'Lavanya Devi a/p Muthusami', 'F', TO_DATE('1983-07-05', 'YYYY-MM-DD'), 40, '0121491235', '3rd Floor, Jalan Raja Chulan, Wisma HLA, Damansara', 'lavanya.devi@gmail.com', 'Indian', 'Mother', 'Lawyer')
INTO PARENT (PRT_ID, PRT_FULLNAME, PRT_GENDER, PRT_DATE_OF_BIRTH, PRT_AGE, PRT_CONTACT_NO, PRT_ADDRESS, PRT_EMAIL, PRT_RACE, RELATIONSHIP_WTH_STD, PRT_JOB)
VALUES('PR0008', 'Lim Wei Shen', 'M', TO_DATE('1987-10-30', 'YYYY-MM-DD'), 36, '0123167981', 'No 18, Lorong Brunai 3, Jalan Pudu, Petaling Jaya', 'weishenlim@gmail.com', 'Chinese', 'Father', 'Business Owner')
INTO PARENT (PRT_ID, PRT_FULLNAME, PRT_GENDER, PRT_DATE_OF_BIRTH, PRT_AGE, PRT_CONTACT_NO, PRT_ADDRESS, PRT_EMAIL, PRT_RACE, RELATIONSHIP_WTH_STD, PRT_JOB)
VALUES('PR0009', 'Tan Thing Thing', 'F', TO_DATE('1981-04-12', 'YYYY-MM-DD'), 42, '0191264322', '5, SS12/2, Jalan Damansara, Kuala Lumpur', 'thing22@gmail.com', 'Chinese', 'Mother', 'IT Consultant')
INTO PARENT (PRT_ID, PRT_FULLNAME, PRT_GENDER, PRT_DATE_OF_BIRTH, PRT_AGE, PRT_CONTACT_NO, PRT_ADDRESS, PRT_EMAIL, PRT_RACE, RELATIONSHIP_WTH_STD, PRT_JOB)
VALUES('PR0010', 'Ahmad bin Mohd Yusof', 'M', TO_DATE('1974-12-03', 'YYYY-MM-DD'), 49, '0135723906', '5B, Ria Ehsan Appartment, Jalan Ria, Kuala Lumpur', 'ahmadyusof@gmail.com', 'Malay', 'Father', 'Dentist')
INTO PARENT (PRT_ID, PRT_FULLNAME, PRT_GENDER, PRT_DATE_OF_BIRTH, PRT_AGE, PRT_CONTACT_NO, PRT_ADDRESS, PRT_EMAIL, PRT_RACE, RELATIONSHIP_WTH_STD, PRT_JOB)
VALUES('PR0011', 'Hong Hui Yin', 'F', TO_DATE('1983-06-25', 'YYYY-MM-DD'), 40, '0122096782', '15-1B, Jalan Pandan 2/2, Pandan Jaya, Damansara', 'huiyinhong@gmail.com', 'Chinese', 'Mother', 'Housewife')
INTO PARENT (PRT_ID, PRT_FULLNAME, PRT_GENDER, PRT_DATE_OF_BIRTH, PRT_AGE, PRT_CONTACT_NO, PRT_ADDRESS, PRT_EMAIL, PRT_RACE, RELATIONSHIP_WTH_STD, PRT_JOB)
VALUES('PR0012', 'Ravi a/l Subramaniam', 'M', TO_DATE('1986-09-08', 'YYYY-MM-DD'), 37, '0187654323', 'Wisma Semantan, 12 Jalan Geligang, Damansara Height', 'ravisubra@gmail.com', 'Indian', 'Father', 'Chef')
INTO PARENT (PRT_ID, PRT_FULLNAME, PRT_GENDER, PRT_DATE_OF_BIRTH, PRT_AGE, PRT_CONTACT_NO, PRT_ADDRESS, PRT_EMAIL, PRT_RACE, RELATIONSHIP_WTH_STD, PRT_JOB)
VALUES('PR0013', 'Aishah binti Ismail', 'F', TO_DATE('1989-03-20', 'YYYY-MM-DD'), 34, '0136750283', '96 Jalan Indah, Damansara', 'aishah89@gmail.com', 'Malay', 'Mother', 'Nurse')
INTO PARENT (PRT_ID, PRT_FULLNAME, PRT_GENDER, PRT_DATE_OF_BIRTH, PRT_AGE, PRT_CONTACT_NO, PRT_ADDRESS, PRT_EMAIL, PRT_RACE, RELATIONSHIP_WTH_STD, PRT_JOB)
VALUES('PR0014', 'Ng Yee Ming', 'M', TO_DATE('1984-08-14', 'YYYY-MM-DD'), 39, '0146290129', 'Wisma Semantan, 12 Jalan Geligang, Damansara Height, Kuala Lumpur', 'yee.ming@gmail.com', 'Chinese', 'Father', 'Marketing Executive')
INTO PARENT (PRT_ID, PRT_FULLNAME, PRT_GENDER, PRT_DATE_OF_BIRTH, PRT_AGE, PRT_CONTACT_NO, PRT_ADDRESS, PRT_EMAIL, PRT_RACE, RELATIONSHIP_WTH_STD, PRT_JOB)
VALUES('PR0015', 'Yeoh Si Qing', 'F', TO_DATE('1981-01-07', 'YYYY-MM-DD'), 42, '0184028324', '127A, Jalan Aminuddin Baki, Taman Tun Dr. Ismail, Petaling Jaya', 'siqing@gmail.com', 'Chinese', 'Mother', 'Human Resources Manager')
SELECT * FROM DUAL;

INSERT ALL
INTO STUDENT (STUD_ID, STUD_FULLNAME, STUD_GENDER, STUD_DATE_OF_BIRTH, STUD_AGE, STUD_RACE, STUD_SCHOOL, PRT_ID)
VALUES('S0001', 'Ong Xiao Ming', 'M', TO_DATE('2013-05-15', 'YYYY-MM-DD'), 10, 'Chinese', 'SJK (C) Puay Chai', 'PR0001')
INTO STUDENT (STUD_ID, STUD_FULLNAME, STUD_GENDER, STUD_DATE_OF_BIRTH, STUD_AGE, STUD_RACE, STUD_SCHOOL, PRT_ID)
VALUES('S0002', 'Ong Xiao Mei', 'F', TO_DATE('2016-08-20', 'YYYY-MM-DD'), 7, 'Chinese', 'SJK (C) Puay Chai', 'PR0001')
INTO STUDENT (STUD_ID, STUD_FULLNAME, STUD_GENDER, STUD_DATE_OF_BIRTH, STUD_AGE, STUD_RACE, STUD_SCHOOL, PRT_ID)
VALUES('S0003', 'Wong Pei Ling', 'M', TO_DATE('2015-03-10', 'YYYY-MM-DD'), 8, 'Chinese', 'SJK(C) Damansara', 'PR0002')
INTO STUDENT (STUD_ID, STUD_FULLNAME, STUD_GENDER, STUD_DATE_OF_BIRTH, STUD_AGE, STUD_RACE, STUD_SCHOOL, PRT_ID)
VALUES('S0004', 'Cheah Bao Xin', 'F', TO_DATE('2017-11-22', 'YYYY-MM-DD'), 6, 'Chinese', 'Desa ParkCity Preschool', 'PR0003')
INTO STUDENT (STUD_ID, STUD_FULLNAME, STUD_GENDER, STUD_DATE_OF_BIRTH, STUD_AGE, STUD_RACE, STUD_SCHOOL, PRT_ID)
VALUES('S0005', 'Hemasini a/p Rajendra', 'F', TO_DATE('2014-10-12', 'YYYY-MM-DD'), 9, 'Indian', 'SJK (T) Vivekananda', 'PR0004')
INTO STUDENT (STUD_ID, STUD_FULLNAME, STUD_GENDER, STUD_DATE_OF_BIRTH, STUD_AGE, STUD_RACE, STUD_SCHOOL, PRT_ID)
VALUES('S0006', 'Alex Chou Jie Lun', 'M', TO_DATE('2012-02-05', 'YYYY-MM-DD'), 11, 'Chinese', 'SJK(C) Chen Moh', 'PR0005')
INTO STUDENT (STUD_ID, STUD_FULLNAME, STUD_GENDER, STUD_DATE_OF_BIRTH, STUD_AGE, STUD_RACE, STUD_SCHOOL, PRT_ID)
VALUES('S0007', 'Nurul Aini binti Muhammad Ali', 'F', TO_DATE('2014-06-20', 'YYYY-MM-DD'), 9, 'Malay', 'SK Merdeka', 'PR0006')
INTO STUDENT (STUD_ID, STUD_FULLNAME, STUD_GENDER, STUD_DATE_OF_BIRTH, STUD_AGE, STUD_RACE, STUD_SCHOOL, PRT_ID)
VALUES('S0008', 'Hariskhandar a/l Vinod', 'M', TO_DATE('2016-09-15', 'YYYY-MM-DD'), 10, 'Indian', 'SJK (T) Ldg Effingham', 'PR0007')
INTO STUDENT (STUD_ID, STUD_FULLNAME, STUD_GENDER, STUD_DATE_OF_BIRTH, STUD_AGE, STUD_RACE, STUD_SCHOOL, PRT_ID)
VALUES('S0009', 'Lim Xin Yee', 'F', TO_DATE('2015-03-08', 'YYYY-MM-DD'), 8, 'Chinese', 'SJK(C) Sungai Way', 'PR0008')
INTO STUDENT (STUD_ID, STUD_FULLNAME, STUD_GENDER, STUD_DATE_OF_BIRTH, STUD_AGE, STUD_RACE, STUD_SCHOOL, PRT_ID)
VALUES('S0010', 'Goh Zhi Yang', 'M', TO_DATE('2014-11-07', 'YYYY-MM-DD'), 9, 'Chinese', 'SJK(C) Damansara', 'PR0009')
INTO STUDENT (STUD_ID, STUD_FULLNAME, STUD_GENDER, STUD_DATE_OF_BIRTH, STUD_AGE, STUD_RACE, STUD_SCHOOL, PRT_ID)
VALUES('S0011', 'Natasha binti Ahmad', 'F', TO_DATE('2012-05-03', 'YYYY-MM-DD'), 11, 'Malay', 'SK Sentul 1', 'PR0010')
INTO STUDENT (STUD_ID, STUD_FULLNAME, STUD_GENDER, STUD_DATE_OF_BIRTH, STUD_AGE, STUD_RACE, STUD_SCHOOL, PRT_ID)
VALUES('S0012', 'Ibrahim bin Ahmad', 'M', TO_DATE('2014-03-18', 'YYYY-MM-DD'), 9, 'Malay', 'SK Sentul 1', 'PR0010')
INTO STUDENT (STUD_ID, STUD_FULLNAME, STUD_GENDER, STUD_DATE_OF_BIRTH, STUD_AGE, STUD_RACE, STUD_SCHOOL, PRT_ID)
VALUES('S0013', 'Sarika a/p Vinod', 'F', TO_DATE('2016-07-05', 'YYYY-MM-DD'), 7, 'Indian', 'SJK (T) Vivekananda', 'PR0007')
INTO STUDENT (STUD_ID, STUD_FULLNAME, STUD_GENDER, STUD_DATE_OF_BIRTH, STUD_AGE, STUD_RACE, STUD_SCHOOL, PRT_ID)
VALUES('S0014', 'Quah Jun Zuan', 'M', TO_DATE('2012-08-06', 'YYYY-MM-DD'), 11, 'Chinese', 'Oasis International School', 'PR0011')
INTO STUDENT (STUD_ID, STUD_FULLNAME, STUD_GENDER, STUD_DATE_OF_BIRTH, STUD_AGE, STUD_RACE, STUD_SCHOOL, PRT_ID)
VALUES('S0015', 'Lim Chong Zong', 'M', TO_DATE('2017-10-30', 'YYYY-MM-DD'), 7, 'Chinese', 'SJK(C) Chen Moh
INTO STUDENT (STUD_ID, STUD_FULLNAME, STUD_GENDER, STUD_DATE_OF_BIRTH, STUD_AGE, STUD_RACE, STUD_SCHOOL, PRT_ID)
VALUES('S0016', 'Subramaniam a/l Ravi', 'M', TO_DATE('2018-09-08', 'YYYY-MM-DD'), 6, 'Indian', 'Kinder Koala PJ', 'PR0012')
INTO STUDENT (STUD_ID, STUD_FULLNAME, STUD_GENDER, STUD_DATE_OF_BIRTH, STUD_AGE, STUD_RACE, STUD_SCHOOL, PRT_ID)
VALUES('S0017', 'Yanis bin Hazim', 'F', TO_DATE('2011-03-20', 'YYYY-MM-DD'), 12, 'Malay', 'SK Indah', 'PR0013')
INTO STUDENT (STUD_ID, STUD_FULLNAME, STUD_GENDER, STUD_DATE_OF_BIRTH, STUD_AGE, STUD_RACE, STUD_SCHOOL, PRT_ID)
VALUES('S0018', 'Ng Wei Hong', 'M', TO_DATE('2017-08-14', 'YYYY-MM-DD'), 6, 'Chinese', 'Tadika Jack & Jill', 'PR0014')
INTO STUDENT (STUD_ID, STUD_FULLNAME, STUD_GENDER, STUD_DATE_OF_BIRTH, STUD_AGE, STUD_RACE, STUD_SCHOOL, PRT_ID)
VALUES('S0019', 'Teoh Karen', 'F', TO_DATE('2012-01-07', 'YYYY-MM-DD'), 11, 'Chinese', 'SJK(C) Chung Kwok', 'PR0015')
INTO STUDENT (STUD_ID, STUD_FULLNAME, STUD_GENDER, STUD_DATE_OF_BIRTH, STUD_AGE, STUD_RACE, STUD_SCHOOL, PRT_ID)
VALUES('S0020', 'Quah Yee Fei', 'F', TO_DATE('2015-06-25', 'YYYY-MM-DD'), 8, 'Chinese', 'Oasis International School', 'PR0011')
SELECT * FROM DUAL;

INSERT ALL
INTO PROGRAMME (PROG_CODE, PROG_NAME, PROG_TIME, PROG_FEE)
VALUES('AREM001', 'Aumentar''s Route Mastery', '1400-1530', 3880.00)
INTO PROGRAMME (PROG_CODE, PROG_NAME, PROG_TIME, PROG_FEE)
VALUES('AR003', 'Aumentar''s Route UP~IT', '0930-1100', 4080.00)
INTO PROGRAMME (PROG_CODE, PROG_NAME, PROG_TIME, PROG_FEE)
VALUES('LPEM001', 'Leader''s Path Mastery', '1400-1600', 3880.00)
INTO PROGRAMME (PROG_CODE, PROG_NAME, PROG_TIME, PROG_FEE)
VALUES('LP003', 'Leader''s Path UP~IT', '0930-1130', 4080.00)
INTO PROGRAMME (PROG_CODE, PROG_NAME, PROG_TIME, PROG_FEE)
VALUES('LP004', 'Leader''s Path UP~IT', '1600-1800', 4080.00)
INTO PROGRAMME (PROG_CODE, PROG_NAME, PROG_TIME, PROG_FEE)
VALUES('MGEM001', 'Mirador''s Guide Mastery', '1400-1530', 3880.00)
INTO PROGRAMME (PROG_CODE, PROG_NAME, PROG_TIME, PROG_FEE)
VALUES('MG003', 'Mirador''s Guide UP~IT', '0930-1100', 4080.00)
SELECT * FROM DUAL;

INSERT ALL
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0001', 'S0001', 'LPEM001', 'REGISTERED', TO_DATE('2023-12-01', 'YYYY-MM-DD'))
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0002', 'S0001', 'LP003', 'REGISTERED', TO_DATE('2023-12-01', 'YYYY-MM-DD'))
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0003', 'S0002', 'MG003', 'REGISTERED', TO_DATE('2023-12-01', 'YYYY-MM-DD'))
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0004', 'S0002', 'MGEM001', 'TRIAL', NULL)
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0005', 'S0003', 'MG003', 'REGISTERED', TO_DATE('2023-12-03', 'YYYY-MM-DD'))
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0006', 'S0004', 'LP003', 'REGISTERED', TO_DATE('2023-12-03', 'YYYY-MM-DD'))
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0007', 'S0005', 'AREM001', 'REGISTERED', TO_DATE('2023-12-04', 'YYYY-MM-DD'))
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0008', 'S0006', 'LP004', 'REGISTERED', TO_DATE('2023-12-04', 'YYYY-MM-DD'))
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0009', 'S0007', 'LPEM001', 'TRIAL', NULL)
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0010', 'S0008', 'LPEM001', 'TRIAL', NULL)
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0011', 'S0009', 'MG003', 'REGISTERED', TO_DATE('2023-12-07', 'YYYY-MM-DD'))
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0012', 'S0010', 'LPEM001', 'REGISTERED', TO_DATE('2023-12-08', 'YYYY-MM-DD'))
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0013', 'S0011', 'AREM001', 'REGISTERED', TO_DATE('2023-12-10', 'YYYY-MM-DD'))
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0014', 'S0012', 'LP004', 'REGISTERED', TO_DATE('2023-12-10', 'YYYY-MM-DD'))
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0015', 'S0013', 'MGEM001', 'TRIAL', NULL)
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0016', 'S0014', 'AREM001', 'REGISTERED', TO_DATE('2023-12-15', 'YYYY-MM-DD'))
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0017', 'S0014', 'AR003', 'REGISTERED', TO_DATE('2023-12-15', 'YYYY-MM-DD'))
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0018', 'S0015', 'MGEM001', 'REGISTERED', TO_DATE('2023-12-15', 'YYYY-MM-DD'))
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0019', 'S0015', 'MG003', 'REGISTERED', TO_DATE('2023-12-15', 'YYYY-MM-DD'))
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0020', 'S0016', 'MGEM001', 'REGISTERED', TO_DATE('2023-12-17', 'YYYY-MM-DD'))
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0021', 'S0017', 'AR003', 'REGISTERED', TO_DATE('2023-12-15', 'YYYY-MM-DD'))
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0022', 'S0018', 'MGEM001', 'TRIAL', NULL)
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0023', 'S0018', 'MG003', 'TRIAL', NULL)
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0024', 'S0019', 'AREM001', 'REGISTERED', TO_DATE('2023-12-20', 'YYYY-MM-DD'))
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0025', 'S0019', 'AR003', 'REGISTERED', TO_DATE('2023-12-20', 'YYYY-MM-DD'))
INTO REGISTRATION (REG_ID, STUD_ID, PROG_CODE, REG_STATUS, REG_DATE) VALUES ('RG0026', 'S0020', 'MG003', 'TRIAL', NULL)
SELECT * FROM DUAL;

INSERT ALL
INTO GROWTH_RECORD (RECORD_ID, STUD_ID, CONFIDENCE_LVL, LEADERSHIP_LVL, CRIC_THINKING_LVL, PROB_SOLVING_LVL, COURAGEOUS_LVL, AREA_OF_IMP)
VALUES ('GR0001', 'S0001', 6, 5, 7, 6, 4, 'Communication Skills Improvement');
INTO GROWTH_RECORD (RECORD_ID, STUD_ID, CONFIDENCE_LVL, LEADERSHIP_LVL, CRIC_THINKING_LVL, PROB_SOLVING_LVL, COURAGEOUS_LVL, AREA_OF_IMP)
VALUES ('GR0002', 'S0002', 4, 3, 5, 4, 2, 'Creativity Enhancement');
INTO GROWTH_RECORD (RECORD_ID, STUD_ID, CONFIDENCE_LVL, LEADERSHIP_LVL, CRIC_THINKING_LVL, PROB_SOLVING_LVL, COURAGEOUS_LVL, AREA_OF_IMP)
VALUES ('GR0003', 'S0003', 7, 6, 3, 5, 5, 'Critical Thinking Development');
INTO GROWTH_RECORD (RECORD_ID, STUD_ID, CONFIDENCE_LVL, LEADERSHIP_LVL, CRIC_THINKING_LVL, PROB_SOLVING_LVL, COURAGEOUS_LVL, AREA_OF_IMP)
VALUES ('GR0004', 'S0004', 3, 2, 4, 3, 1, 'Active Engagement');
INTO GROWTH_RECORD (RECORD_ID, STUD_ID, CONFIDENCE_LVL, LEADERSHIP_LVL, CRIC_THINKING_LVL, PROB_SOLVING_LVL, COURAGEOUS_LVL, AREA_OF_IMP)
VALUES ('GR0005', 'S0005', 5, 4, 6, 5, 3, 'Leadership Skills Improvement');
INTO GROWTH_RECORD (RECORD_ID, STUD_ID, CONFIDENCE_LVL, LEADERSHIP_LVL, CRIC_THINKING_LVL, PROB_SOLVING_LVL, COURAGEOUS_LVL, AREA_OF_IMP)
VALUES ('GR0006', 'S0006', 6, 5, 8, 9, 7, 'Learn To Be A Leader');
INTO GROWTH_RECORD (RECORD_ID, STUD_ID, CONFIDENCE_LVL, LEADERSHIP_LVL, CRIC_THINKING_LVL, PROB_SOLVING_LVL, COURAGEOUS_LVL, AREA_OF_IMP)
VALUES ('GR0007', 'S0007', 4, 3, 5, 4, 2, 'Creativity Development');
INTO GROWTH_RECORD (RECORD_ID, STUD_ID, CONFIDENCE_LVL, LEADERSHIP_LVL, CRIC_THINKING_LVL, PROB_SOLVING_LVL, COURAGEOUS_LVL, AREA_OF_IMP)
VALUES ('GR0008', 'S0008', 7, 6, 4, 6, 7, 'Critical Thinking Improvement');
INTO GROWTH_RECORD (RECORD_ID, STUD_ID, CONFIDENCE_LVL, LEADERSHIP_LVL, CRIC_THINKING_LVL, PROB_SOLVING_LVL, COURAGEOUS_LVL, AREA_OF_IMP)
VALUES ('GR0009', 'S0009', 3, 2, 4, 3, 1, 'Problem-Solving Enhancement');
INTO GROWTH_RECORD (RECORD_ID, STUD_ID, CONFIDENCE_LVL, LEADERSHIP_LVL, CRIC_THINKING_LVL, PROB_SOLVING_LVL, COURAGEOUS_LVL, AREA_OF_IMP)
VALUES ('GR0010', 'S0010', 5, 4, 6, 5, 7, 'Teamwork Developmenmt');
INTO GROWTH_RECORD (RECORD_ID, STUD_ID, CONFIDENCE_LVL, LEADERSHIP_LVL, CRIC_THINKING_LVL, PROB_SOLVING_LVL, COURAGEOUS_LVL, AREA_OF_IMP)
VALUES ('GR0011', 'S0011', 6, 5, 7, 6, 4, 'Communication Skills Improvement');
INTO GROWTH_RECORD (RECORD_ID, STUD_ID, CONFIDENCE_LVL, LEADERSHIP_LVL, CRIC_THINKING_LVL, PROB_SOLVING_LVL, COURAGEOUS_LVL, AREA_OF_IMP)
VALUES ('GR0012', 'S0012', 4, 3, 5, 4, 2, 'Creativity Enhancement');
INTO GROWTH_RECORD (RECORD_ID, STUD_ID, CONFIDENCE_LVL, LEADERSHIP_LVL, CRIC_THINKING_LVL, PROB_SOLVING_LVL, COURAGEOUS_LVL, AREA_OF_IMP)
VALUES ('GR0013', 'S0013', 7, 6, 9, 8, 5, 'Be More Brave');
INTO GROWTH_RECORD (RECORD_ID, STUD_ID, CONFIDENCE_LVL, LEADERSHIP_LVL, CRIC_THINKING_LVL, PROB_SOLVING_LVL, COURAGEOUS_LVL, AREA_OF_IMP)
VALUES ('GR0014', 'S0014', 3, 2, 4, 3, 1, 'Problem-Solving Enhancement');
INTO GROWTH_RECORD (RECORD_ID, STUD_ID, CONFIDENCE_LVL, LEADERSHIP_LVL, CRIC_THINKING_LVL, PROB_SOLVING_LVL, COURAGEOUS_LVL, AREA_OF_IMP)
VALUES ('GR0015', 'S0015', 2, 4, 6, 5, 3, 'Lack of Confidence');
INTO GROWTH_RECORD (RECORD_ID, STUD_ID, CONFIDENCE_LVL, LEADERSHIP_LVL, CRIC_THINKING_LVL, PROB_SOLVING_LVL, COURAGEOUS_LVL, AREA_OF_IMP)
VALUES ('GR0016', 'S0016', 6, 5, 7, 6, 4, 'Be Less Talkative');
INTO GROWTH_RECORD (RECORD_ID, STUD_ID, CONFIDENCE_LVL, LEADERSHIP_LVL, CRIC_THINKING_LVL, PROB_SOLVING_LVL, COURAGEOUS_LVL, AREA_OF_IMP)
VALUES ('GR0017', 'S0017', 4, 3, 5, 4, 2, 'Creativity Development');
INTO GROWTH_RECORD (RECORD_ID, STUD_ID, CONFIDENCE_LVL, LEADERSHIP_LVL, CRIC_THINKING_LVL, PROB_SOLVING_LVL, COURAGEOUS_LVL, AREA_OF_IMP)
VALUES ('GR0018', 'S0018', 7, 6, 7, 5, 5, 'Be More Expressive');
INTO GROWTH_RECORD (RECORD_ID, STUD_ID, CONFIDENCE_LVL, LEADERSHIP_LVL, CRIC_THINKING_LVL, PROB_SOLVING_LVL, COURAGEOUS_LVL, AREA_OF_IMP)
VALUES ('GR0019', 'S0019', 3, 2, 4, 3, 1, 'Problem-Solving Enhancement');
INTO GROWTH_RECORD (RECORD_ID, STUD_ID, CONFIDENCE_LVL, LEADERSHIP_LVL, CRIC_THINKING_LVL, PROB_SOLVING_LVL, COURAGEOUS_LVL, AREA_OF_IMP)
VALUES ('GR0020', 'S0020', 5, 4, 6, 5, 3, 'Leadership Skills Development');
SELECT * FROM DUAL;

INSERT ALL
INTO DEPARTMENT (DEPT_ID, DEPT_NAME, DEPT_DESC)
VALUES ('D001', 'Administration', 'Responsible for managing day-to-day administrative tasks, office operations, and ensuring smooth workflow within the organization.');
INTO DEPARTMENT (DEPT_ID, DEPT_NAME, DEPT_DESC)
VALUES ('D002', 'Logistics', 'Handles the planning, implementation, and coordination of the organization''s supply chain.');
INTO DEPARTMENT (DEPT_ID, DEPT_NAME, DEPT_DESC)
VALUES ('D003', 'Research and Development', 'Focused on innovation and improvement, conducts research, and develops new learning programmes.');
INTO DEPARTMENT (DEPT_ID, DEPT_NAME, DEPT_DESC)
VALUES ('D004', 'Marketing', 'Responsible for creating and executing marketing strategies, campaigns, and initiatives to promote the organization''s products or services to attract customers.');
INTO DEPARTMENT (DEPT_ID, DEPT_NAME, DEPT_DESC)
VALUES ('D005', 'Human Resources', 'Manages human capital, including recruitment, employee relations, training and development, and ensures compliance with employment laws and organizational policies.');
SELECT * FROM DUAL;

INSERT ALL
    INTO COACH (CCH_ID, CCH_FULLNAME, CCH_GENDER, CCH_DATA_OF_BIRTH, CCH_AGE, CCH_EMAIL, CCH_CONTACT_NO, CCH_RACE, CCH_ADDRESS, CCH_COACH_NAME, CCH_POSITION, CCH_BANK_NAME, CCH_BANK_ACC_NO, CCH_SALARY, DEPT_ID) VALUES 
        ('C001', 'Tan Wei Chen', 'M', TO_DATE('1983-05-10', 'YYYY-MM-DD'), 40, 'weichen83@gmail.com', '0129037119', 'Chinese', '58, Jalan Datuk Sulaiman 4, Taman Tun Dr Ismail, TTDI, Kuala Lumpur', 'Hanky', 'Founder', 'CIMB Bank', '60932120583728', 18000.00, 'D003'),
    INTO COACH (CCH_ID, CCH_FULLNAME, CCH_GENDER, CCH_DATA_OF_BIRTH, CCH_AGE, CCH_EMAIL, CCH_CONTACT_NO, CCH_RACE, CCH_ADDRESS, CCH_COACH_NAME, CCH_POSITION, CCH_BANK_NAME, CCH_BANK_ACC_NO, CCH_SALARY, DEPT_ID) VALUES 
        ('C002', 'Goh Yi Lian', 'F', TO_DATE('1985-02-15', 'YYYY-MM-DD'), 38, 'yilian@gmail.com', '01913028871', 'Chinese', '48, Jalan Tenggiri, Bukit Pantai ,Bangsar, Kuala Lumpur', 'Olly', 'Co-Founder', 'MayBank', '301294811058', 12650.00, 'D004'),
    INTO COACH (CCH_ID, CCH_FULLNAME, CCH_GENDER, CCH_DATA_OF_BIRTH, CCH_AGE, CCH_EMAIL, CCH_CONTACT_NO, CCH_RACE, CCH_ADDRESS, CCH_COACH_NAME, CCH_POSITION, CCH_BANK_NAME, CCH_BANK_ACC_NO, CCH_SALARY, DEPT_ID) VALUES 
        ('C003', 'Chin Xue Yi', 'F', TO_DATE('1991-09-26', 'YYYY-MM-DD'), 32, 'xueyi@gmail.com', '0119042821', 'Chinese', 'No. 3, Jalan Wan Kadir 1, Taman Tun Dr. Ismail , Kuala Lumpur', 'Xue Yi', 'Principal', 'CIMB Bank', '7382957109538267', 8875.00, 'D003'),
    INTO COACH (CCH_ID, CCH_FULLNAME, CCH_GENDER, CCH_DATA_OF_BIRTH, CCH_AGE, CCH_EMAIL, CCH_CONTACT_NO, CCH_RACE, CCH_ADDRESS, CCH_COACH_NAME, CCH_POSITION, CCH_BANK_NAME, CCH_BANK_ACC_NO, CCH_SALARY, DEPT_ID) VALUES 
        ('C004', 'Cheah Jing Wen', 'F', TO_DATE('1990-06-25', 'YYYY-MM-DD'), 33, 'winnie@gmail.com', '01870129831', 'Chinese', '66-1, Jalan 1/76D, Desa Pandan, Damansara', 'Winnie', 'Principal', 'Hong Leong Bank', '20499185201', 8875.00, 'D005'),
    INTO COACH (CCH_ID, CCH_FULLNAME, CCH_GENDER, CCH_DATA_OF_BIRTH, CCH_AGE, CCH_EMAIL, CCH_CONTACT_NO, CCH_RACE, CCH_ADDRESS, CCH_COACH_NAME, CCH_POSITION, CCH_BANK_NAME, CCH_BANK_ACC_NO, CCH_SALARY, DEPT_ID) VALUES 
        ('C005', 'Yeap Xin Pei', 'F', TO_DATE('1987-03-08', 'YYYY-MM-DD'), 36, 'shirleyyeap@gmail.com', '0178901245', 'Chinese', '102, Jalan Radin Anum 1, Seri Petaling , Kuala Lumpur', 'Shirley', 'Administration Leader', 'Public Bank', '9201742716', 6150.00, 'D001'),
    INTO COACH (CCH_ID, CCH_FULLNAME, CCH_GENDER, CCH_DATA_OF_BIRTH, CCH_AGE, CCH_EMAIL, CCH_CONTACT_NO, CCH_RACE, CCH_ADDRESS, CCH_COACH_NAME, CCH_POSITION, CCH_BANK_NAME, CCH_BANK_ACC_NO, CCH_SALARY, DEPT_ID) VALUES 
        ('C006', 'Tan Jia Loon', 'M', TO_DATE('1993-12-12', 'YYYY-MM-DD'), 30, 'jialoon1993@gmail.com', '0148103901', 'Chinese', '29, Jalan 10/105, Taman Midah , Petaling Jaya', 'Cheeky', 'Logistics Leader', 'MayBank', '290847162230', 6000.00, 'D002'),
    INTO COACH (CCH_ID, CCH_FULLNAME, CCH_GENDER, CCH_DATA_OF_BIRTH, CCH_AGE, CCH_EMAIL, CCH_CONTACT_NO, CCH_RACE, CCH_ADDRESS, CCH_COACH_NAME, CCH_POSITION, CCH_BANK_NAME, CCH_BANK_ACC_NO, CCH_SALARY, DEPT_ID) VALUES 
        ('C007', 'Emily Lim Jie Man', 'F', TO_DATE('1985-03-08', 'YYYY-MM-DD'), 38, 'jiemanlim@gmail.com', '0178901245', 'Chinese', 'G8E, AMODA, Jalan Imbi , Kuala Lumpur', 'Emily', 'R&D Leader', 'MayBank', '829104230192', 6000.00, 'D003'),
    INTO COACH (CCH_ID, CCH_FULLNAME, CCH_GENDER, CCH_DATA_OF_BIRTH, CCH_AGE, CCH_EMAIL, CCH_CONTACT_NO, CCH_RACE, CCH_ADDRESS, CCH_COACH_NAME, CCH_POSITION, CCH_BANK_NAME, CCH_BANK_ACC_NO, CCH_SALARY, DEPT_ID) VALUES 
        ('C008', 'Munirah binti Ibrahim', 'F', TO_DATE('1989-08-14', 'YYYY-MM-DD'), 34, 'munirah@gmail.com', '01172900134', 'Malay', '4, Lorong 5, Jalan Damai, Kuala Lumpur', 'Naddy', 'Marketing Lead', 'Bank Islam', '461901890323', 6000.00, 'D004'),
    INTO COACH (CCH_ID, CCH_FULLNAME, CCH_GENDER, CCH_DATA_OF_BIRTH, CCH_AGE, CCH_EMAIL, CCH_CONTACT_NO, CCH_RACE, CCH_ADDRESS, CCH_COACH_NAME, CCH_POSITION, CCH_BANK_NAME, CCH_BANK_ACC_NO, CCH_SALARY, DEPT_ID) VALUES 
        ('C009', 'Chin Yi Xuan', 'F', TO_DATE('1992-08-03', 'YYYY-MM-DD'), 31, 'yixuan@gmail.com', '0149028193', 'Chinese', '15, SS15/2, Jalan Damansara, Kuala Lumpur', 'Zoei', 'HR Lead', 'CIMB Bank', '829057832364', 6000.00, 'D005'),
    INTO COACH (CCH_ID, CCH_FULLNAME, CCH_GENDER, CCH_DATA_OF_BIRTH, CCH_AGE, CCH_EMAIL, CCH_CONTACT_NO, CCH_RACE, CCH_ADDRESS, CCH_COACH_NAME, CCH_POSITION, CCH_BANK_NAME, CCH_BANK_ACC_NO, CCH_SALARY, DEPT_ID) VALUES 
        ('C0010', 'Visalini a/p Yaswaran', 'F', TO_DATE('1995-05-27', 'YYYY-MM-DD'), 28, 'visalini@gmail.com', '0128176399', 'Indian', '27 Jalan Merdeka, Kuala Lumpur', 'Zoei', 'Senior Coach', 'Hong Leong Bank', '209187610256', 4700.00, 'D002'),
    INTO COACH (CCH_ID, CCH_FULLNAME, CCH_GENDER, CCH_DATA_OF_BIRTH, CCH_AGE, CCH_EMAIL, CCH_CONTACT_NO, CCH_RACE, CCH_ADDRESS, CCH_COACH_NAME, CCH_POSITION, CCH_BANK_NAME, CCH_BANK_ACC_NO, CCH_SALARY, DEPT_ID) VALUES 
        ('C0011', 'Yap Keng Song', 'M', TO_DATE('1993-04-06', 'YYYY-MM-DD'), 30, 'kengsong@gmail.com', '0138028179', 'Chinese', 'No 29, Lorong Brunai 5, Jalan Pudu, Petaling Jaya', 'Jasper', 'Senior Coach', 'CIMB Bank', '918326740174', 4700.00, 'D001'),
    INTO COACH (CCH_ID, CCH_FULLNAME, CCH_GENDER, CCH_DATA_OF_BIRTH, CCH_AGE, CCH_EMAIL, CCH_CONTACT_NO, CCH_RACE, CCH_ADDRESS, CCH_COACH_NAME, CCH_POSITION, CCH_BANK_NAME, CCH_BANK_ACC_NO, CCH_SALARY, DEPT_ID) VALUES 
        ('C0012', 'Erica Lim Zi Yan', 'F', TO_DATE('1994-01-17', 'YYYY-MM-DD'), 29, 'ericalim@gmail.com', '0176234127', 'Chinese', '25 Jalan Bahagia, Kuala Lumpur', 'Eri', 'Senior Coach', 'MayBank', '739927106145', 4700.00, 'D005'),
    INTO COACH (CCH_ID, CCH_FULLNAME, CCH_GENDER, CCH_DATA_OF_BIRTH, CCH_AGE, CCH_EMAIL, CCH_CONTACT_NO, CCH_RACE, CCH_ADDRESS, CCH_COACH_NAME, CCH_POSITION, CCH_BANK_NAME, CCH_BANK_ACC_NO, CCH_SALARY, DEPT_ID) VALUES 
        ('C0013', 'Joyce Kang Wan Yi', 'F', TO_DATE('1997-11-13', 'YYYY-MM-DD'), 26, 'joyce@gmail.com', '0119578230', 'Chinese', '31, Lorong 2, Jalan Damai, Kuala Lumpur', 'Joycie', 'Junior Coach', 'CIMB Bank', '37828461783', 2800.00, 'D003'),
    INTO COACH (CCH_ID, CCH_FULLNAME, CCH_GENDER, CCH_DATA_OF_BIRTH, CCH_AGE, CCH_EMAIL, CCH_CONTACT_NO, CCH_RACE, CCH_ADDRESS, CCH_COACH_NAME, CCH_POSITION, CCH_BANK_NAME, CCH_BANK_ACC_NO, CCH_SALARY, DEPT_ID) VALUES 
        ('C0014', 'Aliff bin Seman', 'M', TO_DATE('1993-07-07', 'YYYY-MM-DD'), 30, 'aliff@gmail.com', '0146289903', 'Malay', '178 Jalan Indah, Damansara', 'Jack', 'Junior Coach', 'CIMB Bank', '274619052748', 4700.00, 'D004');
SELECT * FROM DUAL;

INSERT ALL
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0001', TO_DATE('2023-12-02', 'YYYY-MM-DD'), 'Inner Confidence, Self Esteem & Self Love', 'C005', 'AR003')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0002', TO_DATE('2023-12-02', 'YYYY-MM-DD'), 'Inner Confidence, Self Esteem & Self Love', 'C002', 'LP003')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0003', TO_DATE('2023-12-02', 'YYYY-MM-DD'), 'Inner Confidence, Self Esteem & Self Love', 'C007', 'MG003')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0004', TO_DATE('2023-12-02', 'YYYY-MM-DD'), 'Emotion Mastery, Emotion Expression & Shifting',  'C001', 'AREM001')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0005', TO_DATE('2023-12-02', 'YYYY-MM-DD'), 'Emotion Mastery, Understanding & Shifting Emotions', 'C004', 'LPEM001')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0006', TO_DATE('2023-12-02', 'YYYY-MM-DD'), 'Emotion Mastery, Understanding Emotions', 'C008', 'MGEM001')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0007', TO_DATE('2023-12-02', 'YYYY-MM-DD'), 'Inner Confidence, Self Esteem & Self Love', 'C009', 'LP004')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0008', TO_DATE('2023-12-09', 'YYYY-MM-DD'), 'Inner Confidence, Self Confidence & Courage', 'C002', 'AR003')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0009', TO_DATE('2023-12-09', 'YYYY-MM-DD'), 'Inner Confidence, Self Confidence & Courage', 'C005', 'LP003')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0010', TO_DATE('2023-12-09', 'YYYY-MM-DD'), 'Inner Confidence, Self Confidence & Courage', 'C007', 'MG003')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0011', TO_DATE('2023-12-09', 'YYYY-MM-DD'), 'People Mastery, Effective Communication', 'C003', 'AREM001')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0012', TO_DATE('2023-12-09', 'YYYY-MM-DD'), 'People Mastery, Effective Communication', 'C0012', 'LPEM001')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0013', TO_DATE('2023-12-09', 'YYYY-MM-DD'), 'Emotion Mastery, Shifting Emotions', 'C0013', 'MGEM001')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0014', TO_DATE('2023-12-09', 'YYYY-MM-DD'), 'Inner Confidence, Self Esteem & Self Love', 'C009', 'LP004')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0015', TO_DATE('2023-12-16', 'YYYY-MM-DD'), 'Purpose Driven, Purpose Identifying', 'C0011', 'AR003')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0016', TO_DATE('2023-12-16', 'YYYY-MM-DD'), 'Purpose Driven, Motivation Self & Be Driven with Purposes', 'C004', 'LP003')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0017', TO_DATE('2023-12-16', 'YYYY-MM-DD'), 'Purpose Driven, Focus & Driven', 'C006', 'MG003')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0018', TO_DATE('2023-12-16', 'YYYY-MM-DD'), 'People Mastery, Conflict Management', 'C0010', 'AREM001')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0019', TO_DATE('2023-12-16', 'YYYY-MM-DD'), 'People Mastery, Conflict Management',  'C008', 'LPEM001')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0020', TO_DATE('2023-12-16', 'YYYY-MM-DD'), 'People Mastery, Seek to Understand', 'C005', 'MGEM001')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0021', TO_DATE('2023-12-16', 'YYYY-MM-DD'), 'Purpose Driven, Motivation Self & Be Driven with Purposes', 'C002', 'LP004')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0022', TO_DATE('2023-12-23', 'YYYY-MM-DD'), 'Ultimate Responsibility, Ownership', 'C0011', 'AR003')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0023', TO_DATE('2023-12-23', 'YYYY-MM-DD'), 'Ultimate Responsibility, Response Ability', 'C004', 'LP003')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0024', TO_DATE('2023-12-23', 'YYYY-MM-DD'), 'Ultimate Responsibility, Response Ability',  'C0013', 'MG003')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0025', TO_DATE('2023-12-23', 'YYYY-MM-DD'), 'People Mastery, Win-win & Teamwork',  'C008', 'AREM001')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0026', TO_DATE('2023-12-23', 'YYYY-MM-DD'), 'People Mastery, Win-win & Teamwork',  'C001', 'LPEM001')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0027', TO_DATE('2023-12-23', 'YYYY-MM-DD'), 'People Mastery, Teamwork', 'MGEM001', 'MGEM001')
    INTO CLASS (CLASS_ID, CLASS_DATE, CLASS_MODULE, CLASS_VALUE, CCH_ID, PROG_CODE) VALUES ('CLS0028', TO_DATE('2023-12-23', 'YYYY-MM-DD'), 'Ultimate Responsibility, Response Ability',  'C004', 'LP004')
SELECT * FROM DUAL;

INSERT ALL
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0001', TO_DATE('2023-12-01', 'YYYY-MM-DD'), TO_DATE('2024-03-01', 'YYYY-MM-DD'), 'REGISTERED - LPEM001', 3880.00, 'S0001', 'LPEM001')
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0002', TO_DATE('2023-12-01', 'YYYY-MM-DD'), TO_DATE('2024-03-01', 'YYYY-MM-DD'), 'REGISTERED - LP003', 4080.00, 'S0001', 'LP003')
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0003', TO_DATE('2023-12-01', 'YYYY-MM-DD'), TO_DATE('2024-03-01', 'YYYY-MM-DD'), 'REGISTERED - MG003', 4080.00, 'S0002', 'MG003');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0004', TO_DATE('2023-12-01', 'YYYY-MM-DD'), TO_DATE('2023-12-11', 'YYYY-MM-DD'), 'TRIAL - MGEM001', 150.00, 'S0002', 'MGEM001');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0005', TO_DATE('2023-12-03', 'YYYY-MM-DD'), TO_DATE('2024-03-03', 'YYYY-MM-DD'), 'REGISTERED - MG003', 4080.00, 'S0003', 'MG003');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0006', TO_DATE('2023-12-03', 'YYYY-MM-DD'), TO_DATE('2024-03-03', 'YYYY-MM-DD'), 'REGISTERED - LP003', 4080.00, 'S0004', 'LP003');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0007', TO_DATE('2023-12-04', 'YYYY-MM-DD'), TO_DATE('2024-03-04', 'YYYY-MM-DD'), 'REGISTERED - AREM001', 4080.00, 'S0005', 'AREM001');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0008', TO_DATE('2023-12-04', 'YYYY-MM-DD'), TO_DATE('2024-03-04', 'YYYY-MM-DD'), 'REGISTERED - LP004', 4080.00, 'S0006', 'LP004');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0009', TO_DATE('2023-12-06', 'YYYY-MM-DD'), TO_DATE('2023-12-16', 'YYYY-MM-DD'), 'TRIAL - LPEM001', 150.00, 'S0007', 'LPEM001');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0010', TO_DATE('2023-12-06', 'YYYY-MM-DD'), TO_DATE('2023-12-16', 'YYYY-MM-DD'), 'TRIAL - LPEM001', 150.00, 'S0008', 'LPEM001');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0011', TO_DATE('2023-12-07', 'YYYY-MM-DD'), TO_DATE('2024-03-07', 'YYYY-MM-DD'), 'REGISTERED - MG003', 4080.00, 'S0009', 'MG003');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0012', TO_DATE('2023-12-08', 'YYYY-MM-DD'), TO_DATE('2024-03-08', 'YYYY-MM-DD'), 'REGISTERED - LPEM001', 3880.00, 'S0010', 'LPEM001');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0013', TO_DATE('2023-12-10', 'YYYY-MM-DD'), TO_DATE('2024-03-10', 'YYYY-MM-DD'), 'REGISTERED - AREM001', 4080.00, 'S0011', 'AREM001');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0014', TO_DATE('2023-12-10', 'YYYY-MM-DD'), TO_DATE('2024-03-10', 'YYYY-MM-DD'), 'REGISTERED - LP004', 4080.00, 'S0012', 'LP004');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0015', TO_DATE('2023-12-12', 'YYYY-MM-DD'), TO_DATE('2023-12-22', 'YYYY-MM-DD'), 'TRIAL - MGEM001', 150.00, 'S0013', 'MGEM001');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0016', TO_DATE('2023-12-15', 'YYYY-MM-DD'), TO_DATE('2024-03-15', 'YYYY-MM-DD'), 'REGISTERED - AREM001', 4080.00, 'S0014', 'AREM001');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0017', TO_DATE('2023-12-15', 'YYYY-MM-DD'), TO_DATE('2024-03-15', 'YYYY-MM-DD'), 'REGISTERED - AR003', 4080.00, 'S0014', 'AR003');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0018', TO_DATE('2023-12-15', 'YYYY-MM-DD'), TO_DATE('2024-03-15', 'YYYY-MM-DD'), 'REGISTERED - MGEM001', 3880.00, 'S0015', 'MGEM001');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0019', TO_DATE('2023-12-15', 'YYYY-MM-DD'), TO_DATE('2024-03-15', 'YYYY-MM-DD'), 'REGISTERED - MG003', 4080.00, 'S0015', 'MG003');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0020', TO_DATE('2023-12-17', 'YYYY-MM-DD'), TO_DATE('2024-03-17', 'YYYY-MM-DD'), 'REGISTERED - MGEM001', 3880.00, 'S0016', 'MGEM001');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0021', TO_DATE('2023-12-15', 'YYYY-MM-DD'), TO_DATE('2024-03-15', 'YYYY-MM-DD'), 'REGISTERED - AR003', 4080.00, 'S0017', 'AR003');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0022', TO_DATE('2023-12-18', 'YYYY-MM-DD'), TO_DATE('2023-12-28', 'YYYY-MM-DD'), 'TRIAL - MGEM001', 150.00, 'S0018', 'MGEM001');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0023', TO_DATE('2023-12-18', 'YYYY-MM-DD'), TO_DATE('2023-12-28', 'YYYY-MM-DD'), 'TRIAL - MG003', 150.00, 'S0018', 'MG003');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0024', TO_DATE('2023-12-20', 'YYYY-MM-DD'), TO_DATE('2024-03-20', 'YYYY-MM-DD'), 'REGISTERED - AREM001', 4080.00, 'S0019', 'AREM001');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0025', TO_DATE('2023-12-20', 'YYYY-MM-DD'), TO_DATE('2024-03-20', 'YYYY-MM-DD'), 'REGISTERED - AR003', 4080.00, 'S0019', 'AR003');
INTO STUDENT_INV (SINV_NO, SINV_BILL_DATE, SINV_DUE_DATE, SINV_DESC, SINV_AMOUNT, STUD_ID, PROG_CODE)
VALUES ('SINV0026', TO_DATE('2023-12-20', 'YYYY-MM-DD'), TO_DATE('2023-12-30', 'YYYY-MM-DD'), 'TRIAL - MG003', 150.00, 'S0020', 'MG003');
SELECT * FROM DUAL;

INSERT ALL
INTO STUDENT_PAYMENT_DETAILS (SPAY_ID, SPAY_DATE, SPAY_AMOUNT, SPAY_METHOD, SPAY_PLAN)
VALUES ('SPAY0001', TO_DATE('2023-12-03', 'YYYY-MM-DD'), 3880.00, 'FPX Online Banking', 'Full')
INTO STUDENT_PAYMENT_DETAILS (SPAY_ID, SPAY_DATE, SPAY_AMOUNT, SPAY_METHOD, SPAY_PLAN)
VALUES ('SPAY0002', TO_DATE('2023-12-03', 'YYYY-MM-DD'), 4080.00, 'FPX Online Banking', 'Full')
INTO STUDENT_PAYMENT_DETAILS (SPAY_ID, SPAY_DATE, SPAY_AMOUNT, SPAY_METHOD, SPAY_PLAN)
VALUES ('SPAY0003', TO_DATE('2023-12-05', 'YYYY-MM-DD'), 2000.00, 'FPX Online Banking', 'Installment')
INTO STUDENT_PAYMENT_DETAILS (SPAY_ID, SPAY_DATE, SPAY_AMOUNT, SPAY_METHOD, SPAY_PLAN)
VALUES ('SPAY0004', TO_DATE('2023-12-05', 'YYYY-MM-DD'), 150.00, 'TNGO E-Wallet', 'Full')
INTO STUDENT_PAYMENT_DETAILS (SPAY_ID, SPAY_DATE, SPAY_AMOUNT, SPAY_METHOD, SPAY_PLAN)
VALUES ('SPAY0005', TO_DATE('2023-12-06', 'YYYY-MM-DD'), 1000.00, 'FPX Online Banking', 'Installment')
INTO STUDENT_PAYMENT_DETAILS (SPAY_ID, SPAY_DATE, SPAY_AMOUNT, SPAY_METHOD, SPAY_PLAN)
VALUES ('SPAY0006', TO_DATE('2023-12-06', 'YYYY-MM-DD'), 4080.00, 'FPX Online Banking', 'Full')
INTO STUDENT_PAYMENT_DETAILS (SPAY_ID, SPAY_DATE, SPAY_AMOUNT, SPAY_METHOD, SPAY_PLAN)
VALUES ('SPAY0007', TO_DATE('2023-12-06', 'YYYY-MM-DD'), 150.00, 'TNGO E-Wallet', 'Full')
INTO STUDENT_PAYMENT_DETAILS (SPAY_ID, SPAY_DATE, SPAY_AMOUNT, SPAY_METHOD, SPAY_PLAN)
VALUES ('SPAY0008', TO_DATE('2023-12-06', 'YYYY-MM-DD'), 150.00, 'TNGO E-Wallet', 'Full')
INTO STUDENT_PAYMENT_DETAILS (SPAY_ID, SPAY_DATE, SPAY_AMOUNT, SPAY_METHOD, SPAY_PLAN)
VALUES ('SPAY0009', TO_DATE('2023-12-10', 'YYYY-MM-DD'), 4080.00, 'FPX Online Banking', 'Full')
INTO STUDENT_PAYMENT_DETAILS (SPAY_ID, SPAY_DATE, SPAY_AMOUNT, SPAY_METHOD, SPAY_PLAN)
VALUES ('SPAY0010', TO_DATE('2023-12-11', 'YYYY-MM-DD'), 1880.00, 'FPX Online Banking', 'Installment')
INTO STUDENT_PAYMENT_DETAILS (SPAY_ID, SPAY_DATE, SPAY_AMOUNT, SPAY_METHOD, SPAY_PLAN)
VALUES ('SPAY0011', TO_DATE('2023-12-14', 'YYYY-MM-DD'), 4080.00, 'FPX Online Banking', 'Full')
INTO STUDENT_PAYMENT_DETAILS (SPAY_ID, SPAY_DATE, SPAY_AMOUNT, SPAY_METHOD, SPAY_PLAN)
VALUES ('SPAY0012', TO_DATE('2023-12-15', 'YYYY-MM-DD'), 150.00, 'TNGO E-Wallet', 'Full')
INTO STUDENT_PAYMENT_DETAILS (SPAY_ID, SPAY_DATE, SPAY_AMOUNT, SPAY_METHOD, SPAY_PLAN)
VALUES ('SPAY0013', TO_DATE('2023-12-18', 'YYYY-MM-DD'), 2080.00, 'FPX Online Banking', 'Installment')
INTO STUDENT_PAYMENT_DETAILS (SPAY_ID, SPAY_DATE, SPAY_AMOUNT, SPAY_METHOD, SPAY_PLAN)
VALUES ('SPAY0014', TO_DATE('2023-12-20', 'YYYY-MM-DD'), 3880.00, 'FPX Online Banking', 'Full')
INTO STUDENT_PAYMENT_DETAILS (SPAY_ID, SPAY_DATE, SPAY_AMOUNT, SPAY_METHOD, SPAY_PLAN)
VALUES ('SPAY0015', TO_DATE('2023-12-20', 'YYYY-MM-DD'), 4080.00, 'FPX Online Banking', 'Full')
INTO STUDENT_PAYMENT_DETAILS (SPAY_ID, SPAY_DATE, SPAY_AMOUNT, SPAY_METHOD, SPAY_PLAN)
VALUES ('SPAY0016', TO_DATE('2023-12-22', 'YYYY-MM-DD'), 4080.00, 'FPX Online Banking', 'Full')
INTO STUDENT_PAYMENT_DETAILS (SPAY_ID, SPAY_DATE, SPAY_AMOUNT, SPAY_METHOD, SPAY_PLAN)
VALUES ('SPAY0017', TO_DATE('2023-12-23', 'YYYY-MM-DD'), 150.00, 'FPX Online Banking', 'Full')
INTO STUDENT_PAYMENT_DETAILS (SPAY_ID, SPAY_DATE, SPAY_AMOUNT, SPAY_METHOD, SPAY_PLAN)
VALUES ('SPAY0018', TO_DATE('2023-12-23', 'YYYY-MM-DD'), 1500.00, 'FPX Online Banking', 'Installment')
SELECT * FROM DUAL;

INSERT ALL
INTO STUDENT_PAYMENT (SINV_NO, SPAY_ID, SPAY_STATUS) VALUES ('SINV0001', 'SPAY0001', 'PAID')
INTO STUDENT_PAYMENT (SINV_NO, SPAY_ID, SPAY_STATUS) VALUES ('SINV0002', 'SPAY0002', 'PAID')
INTO STUDENT_PAYMENT (SINV_NO, SPAY_ID, SPAY_STATUS) VALUES ('SINV0003', 'SPAY0003', 'INTERIM')
INTO STUDENT_PAYMENT (SINV_NO, SPAY_ID, SPAY_STATUS) VALUES ('SINV0004', 'SPAY0004', 'PAID')
INTO STUDENT_PAYMENT (SINV_NO, SPAY_ID, SPAY_STATUS) VALUES ('SINV0005', 'SPAY0005', 'INTERIM')
INTO STUDENT_PAYMENT (SINV_NO, SPAY_ID, SPAY_STATUS) VALUES ('SINV0007', 'SPAY0006', 'PAID')
INTO STUDENT_PAYMENT (SINV_NO, SPAY_ID, SPAY_STATUS) VALUES ('SINV0009', 'SPAY0007', 'PAID')
INTO STUDENT_PAYMENT (SINV_NO, SPAY_ID, SPAY_STATUS) VALUES ('SINV0010', 'SPAY0008', 'PAID')
INTO STUDENT_PAYMENT (SINV_NO, SPAY_ID, SPAY_STATUS) VALUES ('SINV0011', 'SPAY0009', 'PAID')
INTO STUDENT_PAYMENT (SINV_NO, SPAY_ID, SPAY_STATUS) VALUES ('SINV0012', 'SPAY0010', 'INTERIM')
INTO STUDENT_PAYMENT (SINV_NO, SPAY_ID, SPAY_STATUS) VALUES ('SINV0013', 'SPAY0011', 'PAID')
INTO STUDENT_PAYMENT (SINV_NO, SPAY_ID, SPAY_STATUS) VALUES ('SINV0015', 'SPAY0012', 'PAID')
INTO STUDENT_PAYMENT (SINV_NO, SPAY_ID, SPAY_STATUS) VALUES ('SINV0016', 'SPAY0013', 'INTERIM')
INTO STUDENT_PAYMENT (SINV_NO, SPAY_ID, SPAY_STATUS) VALUES ('SINV0018', 'SPAY0014', 'PAID')
INTO STUDENT_PAYMENT (SINV_NO, SPAY_ID, SPAY_STATUS) VALUES ('SINV0019', 'SPAY0015', 'PAID')
INTO STUDENT_PAYMENT (SINV_NO, SPAY_ID, SPAY_STATUS) VALUES ('SINV0021', 'SPAY0016', 'PAID')
INTO STUDENT_PAYMENT (SINV_NO, SPAY_ID, SPAY_STATUS) VALUES ('SINV0022', 'SPAY0017', 'PAID')
INTO STUDENT_PAYMENT (SINV_NO, SPAY_ID, SPAY_STATUS) VALUES ('SINV0025', 'SPAY0018', 'INTERIM')
SELECT * FROM DUAL;

INSERT ALL
    INTO MERCHANDISE (MERC_ID, MERC_NAME, MERC_DESC, MERC_CATE, MERC_PRICE, MERC_STOCK_QTY)
    VALUES ('MERC1', 'Success Planner - Forest Earth', 'BLUE', 'SUCCESS PLANNER', 58.00, 15)
    INTO MERCHANDISE (MERC_ID, MERC_NAME, MERC_DESC, MERC_CATE, MERC_PRICE, MERC_STOCK_QTY)
    VALUES ('MERC2', 'Success Planner - JUNGLE Earth', 'BROWN', 'SUCCESS PLANNER', 58.00, 21)
    INTO MERCHANDISE (MERC_ID, MERC_NAME, MERC_DESC, MERC_CATE, MERC_PRICE, MERC_STOCK_QTY)
    VALUES ('MERC3', 'S-SEPULOH - HANKidz 10th Year Anniversary', 'S SIZE', 'T-SHIRT', 35.00, 6)
    INTO MERCHANDISE (MERC_ID, MERC_NAME, MERC_DESC, MERC_CATE, MERC_PRICE, MERC_STOCK_QTY)
    VALUES ('MERC4', 'M-SEPULOH - HANKidz 10th Year Anniversary', 'M SIZE', 'T-SHIRT', 35.00, 8)
    INTO MERCHANDISE (MERC_ID, MERC_NAME, MERC_DESC, MERC_CATE, MERC_PRICE, MERC_STOCK_QTY)
    VALUES ('MERC5', 'L-SEPULOH - HANKidz 10th Year Anniversary', 'L SIZE', 'T-SHIRT', 35.00, 5)
    INTO MERCHANDISE (MERC_ID, MERC_NAME, MERC_DESC, MERC_CATE, MERC_PRICE, MERC_STOCK_QTY)
    VALUES ('MERC6', 'XL-SEPULOH - HANKidz 10th Year Anniversary', 'XL SIZE', 'T-SHIRT', 35.00, 10)
    INTO MERCHANDISE (MERC_ID, MERC_NAME, MERC_DESC, MERC_CATE, MERC_PRICE, MERC_STOCK_QTY)
    VALUES ('MERC7', 'XXL-SEPULOH - HANKidz 10th Year Anniversary', 'XXL SIZE', 'T-SHIRT', 35.00, 2)
SELECT * FROM DUAL;

INSERT ALL
    INTO CUSTOMER_DETAILS (CUS_ID, CUS_NAME, CUS_CONTACT_NO, CUS_EMAIL)
    VALUES ('CUS001', 'Tan Jia Choo', '0123454829', 'tanjiachoo@gmail.com')
    INTO CUSTOMER_DETAILS (CUS_ID, CUS_NAME, CUS_CONTACT_NO, CUS_EMAIL)
    VALUES ('CUS002', 'Lim Tek Weng', '0137654321', 'limtekweng@gmail.com')
    INTO CUSTOMER_DETAILS (CUS_ID, CUS_NAME, CUS_CONTACT_NO, CUS_EMAIL)
    VALUES ('CUS003', 'Yeoh Pei Shan', '0112753215', 'peishan@gmail.com')
    INTO CUSTOMER_DETAILS (CUS_ID, CUS_NAME, CUS_CONTACT_NO, CUS_EMAIL)
    VALUES ('CUS004', 'Shika Binti Ahminudin', '0198765432', 'shika@gmail.com')
    INTO CUSTOMER_DETAILS (CUS_ID, CUS_NAME, CUS_CONTACT_NO, CUS_EMAIL)
    VALUES ('CUS005', 'Alyssa Binti Kamarul', '0147852369', 'alyssa@gmail.com')
    INTO CUSTOMER_DETAILS (CUS_ID, CUS_NAME, CUS_CONTACT_NO, CUS_EMAIL)
    VALUES ('CUS006', 'Wong Der Xing', '0165987452', 'derxing@gmail.com')
    INTO CUSTOMER_DETAILS (CUS_ID, CUS_NAME, CUS_CONTACT_NO, CUS_EMAIL)
    VALUES ('CUS007', 'Chin Shi Xian', '0134698742', 'chin@gmail.com')
    INTO CUSTOMER_DETAILS (CUS_ID, CUS_NAME, CUS_CONTACT_NO, CUS_EMAIL)
    VALUES ('CUS008', 'Bobby Lim', '0178642091', 'bobby.lim@gmail.com')
    INTO CUSTOMER_DETAILS (CUS_ID, CUS_NAME, CUS_CONTACT_NO, CUS_EMAIL)
    VALUES ('CUS009', 'Rajuhan A/L Kesragan', '0192837465', 'rajuhan@gmail.com')
    INTO CUSTOMER_DETAILS (CUS_ID, CUS_NAME, CUS_CONTACT_NO, CUS_EMAIL)
    VALUES ('CUS010', 'Celin Leong', '0157263849', 'celinleong@gmail.com')
SELECT * FROM DUAL;

INSERT ALL
    INTO CUSTOMER_ORDER (CORDER_REF_NO, CUS_ID, CORDER_DATE, MERC_ID, CORDER_QTY, CORDER_AMOUNT, CCH_ID)
    VALUES ('CRF0001', 'CUS001', TO_DATE('2023-12-01', 'YYYY-MM-DD'), 'MERC1', 2, 116.00, 'C0010')
    INTO CUSTOMER_ORDER (CORDER_REF_NO, CUS_ID, CORDER_DATE, MERC_ID, CORDER_QTY, CORDER_AMOUNT, CCH_ID)
    VALUES ('CRF0002', 'CUS002', TO_DATE('2023-12-03', 'YYYY-MM-DD'), 'MERC2', 1, 58.00, 'C006')
    INTO CUSTOMER_ORDER (CORDER_REF_NO, CUS_ID, CORDER_DATE, MERC_ID, CORDER_QTY, CORDER_AMOUNT, CCH_ID)
    VALUES ('CRF0003', 'CUS003', TO_DATE('2023-12-06', 'YYYY-MM-DD'), 'MERC3', 1, 35.00, 'C0010')
    INTO CUSTOMER_ORDER (CORDER_REF_NO, CUS_ID, CORDER_DATE, MERC_ID, CORDER_QTY, CORDER_AMOUNT, CCH_ID)
    VALUES ('CRF0004', 'CUS003', TO_DATE('2023-12-06', 'YYYY-MM-DD'), 'MERC1', 1, 58.00, 'C0010')
    INTO CUSTOMER_ORDER (CORDER_REF_NO, CUS_ID, CORDER_DATE, MERC_ID, CORDER_QTY, CORDER_AMOUNT, CCH_ID)
    VALUES ('CRF0005', 'CUS004', TO_DATE('2023-12-09', 'YYYY-MM-DD'), 'MERC4', 2, 70.00, 'C0010')
    INTO CUSTOMER_ORDER (CORDER_REF_NO, CUS_ID, CORDER_DATE, MERC_ID, CORDER_QTY, CORDER_AMOUNT, CCH_ID)
    VALUES ('CRF0006', 'CUS005', TO_DATE('2023-12-11', 'YYYY-MM-DD'), 'MERC2', 1, 58.00, 'C006')
    INTO CUSTOMER_ORDER (CORDER_REF_NO, CUS_ID, CORDER_DATE, MERC_ID, CORDER_QTY, CORDER_AMOUNT, CCH_ID)
    VALUES ('CRF0007', 'CUS005', TO_DATE('2023-12-11', 'YYYY-MM-DD'), 'MERC5', 1, 35.00, 'C006')
    INTO CUSTOMER_ORDER (CORDER_REF_NO, CUS_ID, CORDER_DATE, MERC_ID, CORDER_QTY, CORDER_AMOUNT, CCH_ID)
    VALUES ('CRF0008', 'CUS006', TO_DATE('2023-12-14', 'YYYY-MM-DD'), 'MERC6', 1, 35.00, 'C0010')
    INTO CUSTOMER_ORDER (CORDER_REF_NO, CUS_ID, CORDER_DATE, MERC_ID, CORDER_QTY, CORDER_AMOUNT, CCH_ID)
    VALUES ('CRF0009', 'CUS007', TO_DATE('2023-12-14', 'YYYY-MM-DD'), 'MERC4', 3, 105.00, 'C006')
    INTO CUSTOMER_ORDER (CORDER_REF_NO, CUS_ID, CORDER_DATE, MERC_ID, CORDER_QTY, CORDER_AMOUNT, CCH_ID)
    VALUES ('CRF0010', 'CUS008', TO_DATE('2023-12-16', 'YYYY-MM-DD'), 'MERC2', 1, 58.00, 'C0010')
    INTO CUSTOMER_ORDER (CORDER_REF_NO, CUS_ID, CORDER_DATE, MERC_ID, CORDER_QTY, CORDER_AMOUNT, CCH_ID)
    VALUES ('CRF0011', 'CUS009', TO_DATE('2023-12-18', 'YYYY-MM-DD'), 'MERC3', 2, 70.00, 'C006')
    INTO CUSTOMER_ORDER (CORDER_REF_NO, CUS_ID, CORDER_DATE, MERC_ID, CORDER_QTY, CORDER_AMOUNT, CCH_ID)
    VALUES ('CRF0012', 'CUS001', TO_DATE('2023-12-19', 'YYYY-MM-DD'), 'MERC4', 1, 35.00, 'C0010')
    INTO CUSTOMER_ORDER (CORDER_REF_NO, CUS_ID, CORDER_DATE, MERC_ID, CORDER_QTY, CORDER_AMOUNT, CCH_ID)
    VALUES ('CRF0013', 'CUS010', TO_DATE('2023-12-22', 'YYYY-MM-DD'), 'MERC7', 3, 105.00, 'C0010')
SELECT * FROM DUAL; 

INSERT ALL
    INTO RECEIPT (RECEIPT_NO, RECEIPT_DATE, RECEIPT_DESC)
    VALUES ('CR0001', TO_DATE('2023-12-01', 'YYYY-MM-DD'), 'Success Planner - Forest Earth x2, Total Amount: RM116.00')
    INTO RECEIPT (RECEIPT_NO, RECEIPT_DATE, RECEIPT_DESC)
    VALUES ('CR0002', TO_DATE('2023-12-03', 'YYYY-MM-DD'), 'Success Planner - JUNGLE Earth x1, Total Amount: RM58.00')
    INTO RECEIPT (RECEIPT_NO, RECEIPT_DATE, RECEIPT_DESC)
    VALUES ('CR0003', TO_DATE('2023-12-06', 'YYYY-MM-DD'), 'S-SEPULOH - HANKidz 10th Year Anniversary x1, Total Amount: RM35.00')
    INTO RECEIPT (RECEIPT_NO, RECEIPT_DATE, RECEIPT_DESC)
    VALUES ('CR0004', TO_DATE('2023-12-06', 'YYYY-MM-DD'), 'Success Planner - Forest Earth x1, Total Amount: RM58.00')
    INTO RECEIPT (RECEIPT_NO, RECEIPT_DATE, RECEIPT_DESC)
    VALUES ('CR0005', TO_DATE('2023-12-09', 'YYYY-MM-DD'), 'M-SEPULOH - HANKidz 10th Year Anniversary x2, Total Amount: RM70.00')
    INTO RECEIPT (RECEIPT_NO, RECEIPT_DATE, RECEIPT_DESC)
    VALUES ('CR0006', TO_DATE('2023-12-11', 'YYYY-MM-DD'), 'Success Planner - JUNGLE Earth x1, Total Amount: RM58.00')
    INTO RECEIPT (RECEIPT_NO, RECEIPT_DATE, RECEIPT_DESC)
    VALUES ('CR0007', TO_DATE('2023-12-11', 'YYYY-MM-DD'), 'L-SEPULOH - HANKidz 10th Year Anniversary x1, Total Amount: RM35.00')
    INTO RECEIPT (RECEIPT_NO, RECEIPT_DATE, RECEIPT_DESC)
    VALUES ('CR0008', TO_DATE('2023-12-14', 'YYYY-MM-DD'), 'XL-SEPULOH - HANKidz 10th Year Anniversary x1, Total Amount: RM35.00')
    INTO RECEIPT (RECEIPT_NO, RECEIPT_DATE, RECEIPT_DESC)
    VALUES ('CR0009', TO_DATE('2023-12-14', 'YYYY-MM-DD'), 'M-SEPULOH - HANKidz 10th Year Anniversary x3, Total Amount: RM105.00')
    INTO RECEIPT (RECEIPT_NO, RECEIPT_DATE, RECEIPT_DESC)
    VALUES ('CR0010', TO_DATE('2023-12-16', 'YYYY-MM-DD'), 'Success Planner - JUNGLE Earth x1, Total Amount: RM58.00')
    INTO RECEIPT (RECEIPT_NO, RECEIPT_DATE, RECEIPT_DESC)
    VALUES ('CR0011', TO_DATE('2023-12-18', 'YYYY-MM-DD'), 'S-SEPULOH - HANKidz 10th Year Anniversary x2, Total Amount: RM70.00')
    INTO RECEIPT (RECEIPT_NO, RECEIPT_DATE, RECEIPT_DESC)
    VALUES ('CR0012', TO_DATE('2023-12-19', 'YYYY-MM-DD'), 'M-SEPULOH - HANKidz 10th Year Anniversary x1, Total Amount: RM35.00')
    INTO RECEIPT (RECEIPT_NO, RECEIPT_DATE, RECEIPT_DESC)
    VALUES ('CR0013', TO_DATE('2023-12-22', 'YYYY-MM-DD'), 'XXL-SEPULOH - HANKidz 10th Year Anniversary x3, Total Amount: RM105.00') 
SELECT * FROM DUAL;

INSERT ALL
    INTO CUSTOMER_PAYMENT (CPAY_ID, CORDER_REF_NO, CPAY_DATE, CPAY_METHOD, CPAY_AMOUNT, RECEIPT_NO)
    VALUES ('CPAY0001', 'CRF0001', TO_DATE('2023-12-01', 'YYYY-MM-DD'), 'TNGO E-Wallet', 116.00, 'CR0001')
    INTO CUSTOMER_PAYMENT (CPAY_ID, CORDER_REF_NO, CPAY_DATE, CPAY_METHOD, CPAY_AMOUNT, RECEIPT_NO)
    VALUES ('CPAY0002', 'CRF0002', TO_DATE('2023-12-03', 'YYYY-MM-DD'), 'TNGO E-Wallet', 58.00, 'CR0002')
    INTO CUSTOMER_PAYMENT (CPAY_ID, CORDER_REF_NO, CPAY_DATE, CPAY_METHOD, CPAY_AMOUNT, RECEIPT_NO)
    VALUES ('CPAY0003', 'CRF0003', TO_DATE('2023-12-06', 'YYYY-MM-DD'), 'TNGO E-Wallet', 35.00, 'CR0003')
    INTO CUSTOMER_PAYMENT (CPAY_ID, CORDER_REF_NO, CPAY_DATE, CPAY_METHOD, CPAY_AMOUNT, RECEIPT_NO)
    VALUES ('CPAY0004', 'CRF0004', TO_DATE('2023-12-06', 'YYYY-MM-DD'), 'FPX Online Banking', 58.00, 'CR0004')
    INTO CUSTOMER_PAYMENT (CPAY_ID, CORDER_REF_NO, CPAY_DATE, CPAY_METHOD, CPAY_AMOUNT, RECEIPT_NO)
    VALUES ('CPAY0005', 'CRF0005', TO_DATE('2023-12-09', 'YYYY-MM-DD'), 'TNGO E-Wallet', 70.00, 'CR0005')
    INTO CUSTOMER_PAYMENT (CPAY_ID, CORDER_REF_NO, CPAY_DATE, CPAY_METHOD, CPAY_AMOUNT, RECEIPT_NO)
    VALUES ('CPAY0006', 'CRF0006', TO_DATE('2023-12-11', 'YYYY-MM-DD'), 'FPX Online Banking', 58.00, 'CR0006')
    INTO CUSTOMER_PAYMENT (CPAY_ID, CORDER_REF_NO, CPAY_DATE, CPAY_METHOD, CPAY_AMOUNT, RECEIPT_NO)
    VALUES ('CPAY0007', 'CRF0007', TO_DATE('2023-12-11', 'YYYY-MM-DD'), 'FPX Online Banking', 35.00, 'CR0007')
    INTO CUSTOMER_PAYMENT (CPAY_ID, CORDER_REF_NO, CPAY_DATE, CPAY_METHOD, CPAY_AMOUNT, RECEIPT_NO)
    VALUES ('CPAY0008', 'CRF0008', TO_DATE('2023-12-14', 'YYYY-MM-DD'), 'FPX Online Banking', 35.00, 'CR0008')
    INTO CUSTOMER_PAYMENT (CPAY_ID, CORDER_REF_NO, CPAY_DATE, CPAY_METHOD, CPAY_AMOUNT, RECEIPT_NO)
    VALUES ('CPAY0009', 'CRF0009', TO_DATE('2023-12-14', 'YYYY-MM-DD'), 'FPX Online Banking', 105.00, 'CR0009')
    INTO CUSTOMER_PAYMENT (CPAY_ID, CORDER_REF_NO, CPAY_DATE, CPAY_METHOD, CPAY_AMOUNT, RECEIPT_NO)
    VALUES ('CPAY0010', 'CRF0010', TO_DATE('2023-12-16', 'YYYY-MM-DD'), 'FPX Online Banking', 58.00, 'CR0010')
    INTO CUSTOMER_PAYMENT (CPAY_ID, CORDER_REF_NO, CPAY_DATE, CPAY_METHOD, CPAY_AMOUNT, RECEIPT_NO)
    VALUES ('CPAY0011', 'CRF0011', TO_DATE('2023-12-18', 'YYYY-MM-DD'), 'TNGO E-Wallet', 70.00, 'CR0011')
    INTO CUSTOMER_PAYMENT (CPAY_ID, CORDER_REF_NO, CPAY_DATE, CPAY_METHOD, CPAY_AMOUNT, RECEIPT_NO)
    VALUES ('CPAY0012', 'CRF0012', TO_DATE('2023-12-19', 'YYYY-MM-DD'), 'FPX Online Banking', 35.00, 'CR0012')
    INTO CUSTOMER_PAYMENT (CPAY_ID, CORDER_REF_NO, CPAY_DATE, CPAY_METHOD, CPAY_AMOUNT, RECEIPT_NO)
    VALUES ('CPAY0013', 'CRF0013', TO_DATE('2023-12-22', 'YYYY-MM-DD'), 'TNGO E-Wallet', 105.00, 'CR0013')
SELECT * FROM DUAL;

INSERT ALL
INTO MANUFACTURER_DETAILS (MFR_ID, MFR_NAME, MFR_ADDRESS, MFR_PIC, MFR_CONTACT_NO) VALUES ('MFR001', 'Colorific Print', 'Sunway Nexis, Jalan PJU 5/1 Block B-02-10 (Retail, Kota Damansara, 47810 Petaling Jaya, Selangor', 'Hafizah', '0172902817')
INTO MANUFACTURER_DETAILS (MFR_ID, MFR_NAME, MFR_ADDRESS, MFR_PIC, MFR_CONTACT_NO) VALUES ('MFR002', 'Zeeprint Kota Damansara', '33, Jalan PJU 5/20a, Kota Damansara, 47810 Petaling Jaya, Selangor', 'Aminuddin', '01243820129')
INTO MANUFACTURER_DETAILS (MFR_ID, MFR_NAME, MFR_ADDRESS, MFR_PIC, MFR_CONTACT_NO) VALUES ('MFR003', 'Lightbulb Apparel-Tshirt Printing & Manufacturing', '4, Jalan SS 4c/5, Ss 4, 47301 Petaling Jaya, Selangor', 'Ooi Bing Shun', '01129481197')
INTO MANUFACTURER_DETAILS (MFR_ID, MFR_NAME, MFR_ADDRESS, MFR_PIC, MFR_CONTACT_NO) VALUES ('MFR004', 'Printcious', 'No. 30, Ground Floor, Jalan Tiara 4, Bandar Baru Klang, 41150 Klang, Selangor', 'Siti', '0193716539')
SELECT * FROM DUAL;

INSERT ALL
    INTO MANUFACTURER_ORDER (MORDER_REF_NO, MFR_ID, MERC_ID, MORDER_DATE, MORDER_QTY, MORDER_TOTALCOST, CCH_ID) 
    VALUES ('MRN001', 'MFR001', 'MERC1', TO_DATE('2023-12-01', 'YYYY-MM-DD'), 10, 180.00, 'C006')
    INTO MANUFACTURER_ORDER (MORDER_REF_NO, MFR_ID, MERC_ID, MORDER_DATE, MORDER_QTY, MORDER_TOTALCOST, CCH_ID) 
    VALUES ('MRN002', 'MFR001', 'MERC2', TO_DATE('2023-12-01', 'YYYY-MM-DD'), 10, 180.00, 'C006')
    INTO MANUFACTURER_ORDER (MORDER_REF_NO, MFR_ID, MERC_ID, MORDER_DATE, MORDER_QTY, MORDER_TOTALCOST, CCH_ID) 
    VALUES ('MRN003', 'MFR003', 'MERC3', TO_DATE('2023-12-01', 'YYYY-MM-DD'), 15, 300.00, 'C0010')
    INTO MANUFACTURER_ORDER (MORDER_REF_NO, MFR_ID, MERC_ID, MORDER_DATE, MORDER_QTY, MORDER_TOTALCOST, CCH_ID) 
    VALUES ('MRN004', 'MFR003', 'MERC4', TO_DATE('2023-12-01', 'YYYY-MM-DD'), 15, 300.00, 'C0010')
    INTO MANUFACTURER_ORDER (MORDER_REF_NO, MFR_ID, MERC_ID, MORDER_DATE, MORDER_QTY, MORDER_TOTALCOST, CCH_ID) 
    VALUES ('MRN005', 'MFR003', 'MERC5', TO_DATE('2023-12-01', 'YYYY-MM-DD'), 10, 200.00, 'C0010')
    INTO MANUFACTURER_ORDER (MORDER_REF_NO, MFR_ID, MERC_ID, MORDER_DATE, MORDER_QTY, MORDER_TOTALCOST, CCH_ID) 
    VALUES ('MRN006', 'MFR003', 'MERC6', TO_DATE('2023-12-01', 'YYYY-MM-DD'), 5, 100.00, 'C0010')
    INTO MANUFACTURER_ORDER (MORDER_REF_NO, MFR_ID, MERC_ID, MORDER_DATE, MORDER_QTY, MORDER_TOTALCOST, CCH_ID) 
    VALUES ('MRN007', 'MFR002', 'MERC1', TO_DATE('2023-12-15', 'YYYY-MM-DD'), 10, 180.00, 'C006')
    INTO MANUFACTURER_ORDER (MORDER_REF_NO, MFR_ID, MERC_ID, MORDER_DATE, MORDER_QTY, MORDER_TOTALCOST, CCH_ID) 
    VALUES ('MRN008', 'MFR004', 'MERC3', TO_DATE('2023-12-15', 'YYYY-MM-DD'), 10, 200.00, 'C0010')
    INTO MANUFACTURER_ORDER (MORDER_REF_NO, MFR_ID, MERC_ID, MORDER_DATE, MORDER_QTY, MORDER_TOTALCOST, CCH_ID) 
    VALUES ('MRN009', 'MFR004', 'MERC4', TO_DATE('2023-12-15', 'YYYY-MM-DD'), 10, 200.00, 'C0010')
    INTO MANUFACTURER_ORDER (MORDER_REF_NO, MFR_ID, MERC_ID, MORDER_DATE, MORDER_QTY, MORDER_TOTALCOST, CCH_ID) 
    VALUES ('MRN010', 'MFR004', 'MERC7', TO_DATE('2023-12-15', 'YYYY-MM-DD'), 2, 40.00, 'C0010')
SELECT * FROM DUAL;

INSERT ALL
    INTO MANUFACTURER_INV (MINV_NO, MORDER_REF_NO, MINV_BILL_DATE, MINV_DUE_DATE, MINV_DESC, MINV_AMOUNT) 
    VALUES ('MINV001', 'MRN001', TO_DATE('2023-12-01', 'YYYY-MM-DD'), TO_DATE('2024-01-01', 'YYYY-MM-DD'), 'Success Planner - Forest Earth x 10', 180.00)
    INTO MANUFACTURER_INV (MINV_NO, MORDER_REF_NO, MINV_BILL_DATE, MINV_DUE_DATE, MINV_DESC, MINV_AMOUNT) 
    VALUES ('MINV002', 'MRN002', TO_DATE('2023-12-01', 'YYYY-MM-DD'), TO_DATE('2024-01-01', 'YYYY-MM-DD'), 'Success Planner - Jungle Earth x 10', 180.00)
    INTO MANUFACTURER_INV (MINV_NO, MORDER_REF_NO, MINV_BILL_DATE, MINV_DUE_DATE, MINV_DESC, MINV_AMOUNT) 
    VALUES ('MINV003', 'MRN003', TO_DATE('2023-12-01', 'YYYY-MM-DD'), TO_DATE('2024-01-01', 'YYYY-MM-DD'), 'SEPULOH - HANKidz 10th Year Anniversary (S SIZE) x 15', 300.00)
    INTO MANUFACTURER_INV (MINV_NO, MORDER_REF_NO, MINV_BILL_DATE, MINV_DUE_DATE, MINV_DESC, MINV_AMOUNT) 
    VALUES ('MINV004', 'MRN004', TO_DATE('2023-12-01', 'YYYY-MM-DD'), TO_DATE('2024-01-01', 'YYYY-MM-DD'), 'SEPULOH - HANKidz 10th Year Anniversary (M SIZE) x 15', 300.00)
    INTO MANUFACTURER_INV (MINV_NO, MORDER_REF_NO, MINV_BILL_DATE, MINV_DUE_DATE, MINV_DESC, MINV_AMOUNT) 
    VALUES ('MINV005', 'MRN005', TO_DATE('2023-12-01', 'YYYY-MM-DD'), TO_DATE('2024-01-01', 'YYYY-MM-DD'), 'SEPULOH - HANKidz 10th Year Anniversary (L SIZE) x 10', 200.00)
    INTO MANUFACTURER_INV (MINV_NO, MORDER_REF_NO, MINV_BILL_DATE, MINV_DUE_DATE, MINV_DESC, MINV_AMOUNT) 
    VALUES ('MINV006', 'MRN006', TO_DATE('2023-12-01', 'YYYY-MM-DD'), TO_DATE('2024-01-01', 'YYYY-MM-DD'), 'SEPULOH - HANKidz 10th Year Anniversary (XL SIZE) x 5', 100.00)
    INTO MANUFACTURER_INV (MINV_NO, MORDER_REF_NO, MINV_BILL_DATE, MINV_DUE_DATE, MINV_DESC, MINV_AMOUNT) 
    VALUES ('MINV007', 'MRN007', TO_DATE('2023-12-15', 'YYYY-MM-DD'), TO_DATE('2024-01-15', 'YYYY-MM-DD'), 'Success Planner - Forest Earth x 10', 180.00)
    INTO MANUFACTURER_INV (MINV_NO, MORDER_REF_NO, MINV_BILL_DATE, MINV_DUE_DATE, MINV_DESC, MINV_AMOUNT) 
    VALUES ('MINV008', 'MRN008', TO_DATE('2023-12-15', 'YYYY-MM-DD'), TO_DATE('2024-01-15', 'YYYY-MM-DD'), 'SEPULOH - HANKidz 10th Year Anniversary (S SIZE) x 10', 200.00)
    INTO MANUFACTURER_INV (MINV_NO, MORDER_REF_NO, MINV_BILL_DATE, MINV_DUE_DATE, MINV_DESC, MINV_AMOUNT) 
    VALUES ('MINV009', 'MRN009', TO_DATE('2023-12-15', 'YYYY-MM-DD'), TO_DATE('2024-01-15', 'YYYY-MM-DD'), 'SEPULOH - HANKidz 10th Year Anniversary (M SIZE) x 10', 200.00)
    INTO MANUFACTURER_INV (MINV_NO, MORDER_REF_NO, MINV_BILL_DATE, MINV_DUE_DATE, MINV_DESC, MINV_AMOUNT) 
    VALUES ('MINV010', 'MRN010', TO_DATE('2023-12-15', 'YYYY-MM-DD'), TO_DATE('2024-01-15', 'YYYY-MM-DD'), 'SEPULOH - HANKidz 10th Year Anniversary (XXL SIZE) x 2', 40.00)
SELECT * FROM DUAL;


INSERT ALL
    INTO TRANSACTION (TRANS_ID, MINV_NO, TRANS_METHOD, TRANS_AMOUNT, TRANS_DATE) VALUES ('T1234567890', 'MINV001', 'FPX Online Banking', 180.00, TO_DATE('2023-12-10', 'YYYY-MM-DD'))
    INTO TRANSACTION (TRANS_ID, MINV_NO, TRANS_METHOD, TRANS_AMOUNT, TRANS_DATE) VALUES ('T0987654321', 'MINV002', 'FPX Online Banking', 180.00, TO_DATE('2023-12-10', 'YYYY-MM-DD'))
    INTO TRANSACTION (TRANS_ID, MINV_NO, TRANS_METHOD, TRANS_AMOUNT, TRANS_DATE) VALUES ('T9876543210', 'MINV003', 'FPX Online Banking', 300.00, TO_DATE('2023-12-10', 'YYYY-MM-DD'))
    INTO TRANSACTION (TRANS_ID, MINV_NO, TRANS_METHOD, TRANS_AMOUNT, TRANS_DATE) VALUES ('T5678901234', 'MINV004', 'FPX Online Banking', 300.00, TO_DATE('2023-12-10', 'YYYY-MM-DD'))
    INTO TRANSACTION (TRANS_ID, MINV_NO, TRANS_METHOD, TRANS_AMOUNT, TRANS_DATE) VALUES ('T0123456789', 'MINV005', 'FPX Online Banking', 200.00, TO_DATE('2023-12-10', 'YYYY-MM-DD'))
    INTO TRANSACTION (TRANS_ID, MINV_NO, TRANS_METHOD, TRANS_AMOUNT, TRANS_DATE) VALUES ('T6789012345', 'MINV006', 'FPX Online Banking', 100.00, TO_DATE('2023-12-10', 'YYYY-MM-DD'))
SELECT * FROM DUAL; 

--UPDATE QUERY SAMPLES
--1
UPDATE PARENT
SET PRT_CONTACT_NO = '0173967784', PRT_JOB = 'Software Engineer'
WHERE PRT_ID = 'PR0009';

--2
UPDATE CLASS
SET CCH_ID = ‘C0014’
WHERE CLS_ID = 'CLS0008';

--3
UPDATE MERCHANDISE
SET MERC_STOCK_QTY = 
    CASE 
        WHEN MERC_ID = 'MERC5' THEN MERC_STOCK_QTY + 1
        WHEN MERC_ID = 'MERC4' THEN MERC_STOCK_QTY - 1
        ELSE MERC_STOCK_QTY
    END
WHERE MERC_ID IN ('MERC5', 'MERC4');

--DELETE QUERY SAMPLE
/*UPDATE PARENT
SET PRT_CONTACT_NO = '0173967784', PRT_JOB = 'Software Engineer'
WHERE PRT_ID = 'PR0009';
*/

--SELECT QUERY
--1
SELECT * FROM TRANSACTION;

--2
SELECT *
FROM PARENT
WHERE PRT_RACE = 'Malay';

--3
SELECT *
FROM CUSTOMER_ORDER
WHERE CORDER_QTY > 50 
AND CORDER_DATE BETWEEN TO_DATE('2023-12-01', 'YYYY-MM-DD') AND TO_DATE('2023-12-15', 'YYYY-MM-DD');

=================================================================================================
--Advanced SQL Queries for Company’s Special Requirements
--1. The administration team would like to retrieve basic student information including details of their parents in case there is a need to contact them.
SELECT
    STUD_ID,
    STUD_FULLNAME,
    STUD_AGE,
    PARENT.PRT_ID,
    PARENT.PRT_FULLNAME,
    PARENT.PRT_CONTACT_NO,
    PARENT.RELATIONSHIP_WTH_STD
FROM
    STUDENT
INNER JOIN
    PARENT ON PARENT.PRT_ID = STUDENT.PRT_ID;


--2. The administration team needs a report that provides a summary of the number of programs each student has registered for. 
SELECT
    STUDENT.STUD_ID,
    STUDENT.STUD_FULLNAME,
    COUNT(REGISTRATION.PROG_CODE) AS NUM_PROGRAMS_REGISTERED
FROM
    STUDENT
LEFT JOIN
    REGISTRATION ON STUDENT.STUD_ID = REGISTRATION.STUD_ID
GROUP BY
    STUDENT.STUD_ID, STUDENT.STUD_FULLNAME;


--3. The administration team would like to track the enrollment status by the number of trial registrations and the number of registered students for each program.
SELECT
    PROGRAMME.PROG_CODE,
    PROGRAMME.PROG_NAME,
    COUNT(CASE WHEN REGISTRATION.REG_STATUS = 'TRIAL' THEN 1 END) AS NUMBER_OF_TRIALS,
    COUNT(CASE WHEN REGISTRATION.REG_STATUS = 'REGISTERED' THEN 1 END) AS NUMBER_OF_REGISTERED
FROM
    PROGRAMME
INNER JOIN
    REGISTRATION ON PROGRAMME.PROG_CODE = REGISTRATION.PROG_CODE
GROUP BY
    PROGRAMME.PROG_CODE, PROGRAMME.PROG_NAME;


--4. On a monthly basis, students who achieve the highest average score in the growth record  for each programme will receive an award. (Average Score = (CONFIDENCE_LVL + LEADERSHIP_LVL + CRIC_THINKING_LVL + PROB_SOLVING_LVL + COURAGEOUS_LVL) /5)
WITH RankedStudents AS (
    SELECT
        REGISTRATION.PROG_CODE,
        PROGRAMME.PROG_NAME,
        STUDENT.STUD_ID,
        STUDENT.STUD_FULLNAME,
        AVG((GROWTH_RECORD.CONFIDENCE_LVL + GROWTH_RECORD.LEADERSHIP_LVL + GROWTH_RECORD.CRIC_THINKING_LVL + GROWTH_RECORD.PROB_SOLVING_LVL + GROWTH_RECORD.COURAGEOUS_LVL) / 5) AS AVERAGE_SCORE,
        RANK() OVER (PARTITION BY REGISTRATION.PROG_CODE ORDER BY AVG((GROWTH_RECORD.CONFIDENCE_LVL + GROWTH_RECORD.LEADERSHIP_LVL + GROWTH_RECORD.CRIC_THINKING_LVL + GROWTH_RECORD.PROB_SOLVING_LVL + GROWTH_RECORD.COURAGEOUS_LVL) / 5) DESC) AS RN
    FROM
        STUDENT
    INNER JOIN
        GROWTH_RECORD ON STUDENT.STUD_ID = GROWTH_RECORD.STUD_ID
    INNER JOIN
        REGISTRATION ON STUDENT.STUD_ID = REGISTRATION.STUD_ID
    INNER JOIN
        PROGRAMME ON REGISTRATION.PROG_CODE = PROGRAMME.PROG_CODE
    GROUP BY
        REGISTRATION.PROG_CODE, PROGRAMME.PROG_NAME, STUDENT.STUD_ID, STUDENT.STUD_FULLNAME
) 

SELECT
    PROG_CODE,
    PROG_NAME,
    STUD_ID,
    STUD_FULLNAME,
    AVERAGE_SCORE
FROM RankedStudents
WHERE
    RN = 1;


--5. The coach wants to retrieve details of all students who registered for a specific programme.
SELECT
    S.STUD_ID,
    S.STUD_FULLNAME,
    S.STUD_GENDER,
    S.STUD_AGE,
    R.REG_ID,
    R.REG_STATUS
FROM
    STUDENT S
INNER JOIN
    REGISTRATION R ON S.STUD_ID = R.STUD_ID
WHERE
    R.PROG_CODE = 'MGEM001';

--6. The system should provide a function that allows users to retrieve information about coaches working under a specific department. 
SELECT
    CCH_ID,
    CCH_COACH_NAME,
    CCH_POSITION
FROM
    COACH
INNER JOIN
    DEPARTMENT ON COACH.DEPT_ID = DEPARTMENT.DEPT_ID
WHERE
    DEPARTMENT.DEPT_NAME = 'Research and Development';


--7. The HR team aims to number of classes conducted by a coach within the specified date range. 
SELECT COACH.CCH_ID, COACH.CCH_COACH_NAME, COUNT(CLASS.CLASS_ID) AS NUM_CLASSES
FROM COACH
LEFT JOIN CLASS ON CLASS.CCH_ID = COACH.CCH_ID 
AND CLASS_DATE BETWEEN TO_DATE('2023-12-01', 'YYYY-MM-DD') AND TO_DATE('2023-12-15', 'YYYY-MM-DD')
GROUP BY COACH.CCH_ID, COACH.CCH_COACH_NAME
ORDER BY NUM_CLASSES DESC;


    
--8. The company is seeking to identify students with unpaid invoices. 
SELECT
    STUDENT_INV.SINV_NO,
    STUDENT.STUD_ID,
    STUDENT.STUD_FULLNAME,
    STUDENT_INV.PROG_CODE,
    PROGRAMME.PROG_NAME,
    SUM(STUDENT_INV.SINV_AMOUNT) AS AMOUNT
FROM
    STUDENT
INNER JOIN
    STUDENT_INV ON STUDENT.STUD_ID = STUDENT_INV.STUD_ID
INNER JOIN
    PROGRAMME ON STUDENT_INV.PROG_CODE = PROGRAMME.PROG_CODE
LEFT JOIN
    STUDENT_PAYMENT ON STUDENT_INV.SINV_NO = STUDENT_PAYMENT.SINV_NO
WHERE
    STUDENT_PAYMENT.SINV_NO IS NULL
GROUP BY
    STUDENT.STUD_ID, STUDENT.STUD_FULLNAME, STUDENT_INV.SINV_NO, STUDENT_INV.PROG_CODE, PROGRAMME.PROG_NAME;

--9. The company is seeking to identify the paid amount and balance amount for students who have signed for installment payment plans. 
SELECT
    STUDENT_INV.SINV_NO,
    STUDENT_PAYMENT_DETAILS.SPAY_ID,
    STUDENT.STUD_ID,
    STUDENT.STUD_FULLNAME,
    STUDENT_INV.SINV_AMOUNT AS TOTAL_AMOUNT,
    STUDENT_PAYMENT_DETAILS.SPAY_AMOUNT AS PAID_AMOUNT,
    STUDENT_INV.SINV_AMOUNT - STUDENT_PAYMENT_DETAILS.SPAY_AMOUNT AS BALANCE_AMOUNT
FROM
    STUDENT
INNER JOIN
    STUDENT_INV ON STUDENT.STUD_ID = STUDENT_INV.STUD_ID
INNER JOIN
    STUDENT_PAYMENT ON STUDENT_INV.SINV_NO = STUDENT_PAYMENT.SINV_NO
LEFT JOIN
    STUDENT_PAYMENT_DETAILS ON STUDENT_PAYMENT.SPAY_ID = STUDENT_PAYMENT_DETAILS.SPAY_ID
WHERE
    STUDENT_PAYMENT_DETAILS.SPAY_PLAN = 'Installment';


--10. The logistic team wants to check the balance of the stock quantity so that it can assist them in deciding when to place manufacturer orders to replenish low-inventory items.
SELECT
    MERC_ID,
    MERC_NAME,
    MERC_DESC,
    MERC_CATE,
    MERC_STOCK_QTY
FROM
    MERCHANDISE
WHERE
    MERC_STOCK_QTY < 10;


--11. The company wants to retrieve a report summarizing the total quantity sold and total sales amount for each merchandise item in a specific year and month.
SELECT
    MERCHANDISE.MERC_ID,
    MERCHANDISE.MERC_NAME,
    MERCHANDISE.MERC_PRICE,
    SUM(CUSTOMER_ORDER.CORDER_QTY) AS TOTAL_QUANTITY_SOLD,
    SUM(CUSTOMER_ORDER.CORDER_AMOUNT) AS TOTAL_SALES_AMOUNT
FROM
    MERCHANDISE
INNER JOIN
    CUSTOMER_ORDER ON MERCHANDISE.MERC_ID = CUSTOMER_ORDER.MERC_ID
WHERE
    EXTRACT(YEAR FROM CUSTOMER_ORDER.CORDER_DATE) = 2023
    AND EXTRACT(MONTH FROM CUSTOMER_ORDER.CORDER_DATE) = 12
GROUP BY
    MERCHANDISE.MERC_ID, MERCHANDISE.MERC_NAME, MERCHANDISE.MERC_PRICE
ORDER BY
    TOTAL_SALES_AMOUNT DESC;


--12. The logistics team wants to search for orders handled by a specific coach.
SELECT
    CUSTOMER_ORDER.CORDER_REF_NO,
    CUSTOMER_ORDER.CUS_ID,
    CUSTOMER_DETAILS.CUS_NAME,
    CUSTOMER_DETAILS.CUS_CONTACT_NO,
    CUSTOMER_ORDER.CORDER_DATE,
    CUSTOMER_ORDER.MERC_ID,
    CUSTOMER_ORDER.CORDER_QTY
FROM
    CUSTOMER_ORDER
INNER JOIN
    CUSTOMER_DETAILS ON CUSTOMER_ORDER.CUS_ID = CUSTOMER_DETAILS.CUS_ID
WHERE
    CUSTOMER_ORDER.CCH_ID = 'C0010';

--13. The company wants a summary of payments received through 'TNGO E-Wallet' and 'FPX Online Banking' for a specific year and month.
SELECT
    CP.CPAY_METHOD,
    COUNT(DISTINCT CO.CORDER_REF_NO) AS NUMBER_OF_ORDERS,
    SUM(CP.CPAY_AMOUNT) AS TOTAL_AMOUNT_COLLECTED
FROM
    CUSTOMER_PAYMENT CP
INNER JOIN
    CUSTOMER_ORDER CO ON CP.CORDER_REF_NO = CO.CORDER_REF_NO
WHERE
    CP.CPAY_METHOD IN ('TNGO E-Wallet', 'FPX Online Banking')
    AND EXTRACT(YEAR FROM CP.CPAY_DATE) = 2023
    AND EXTRACT(MONTH FROM CP.CPAY_DATE) = 12 
GROUP BY
    EXTRACT(YEAR FROM CP.CPAY_DATE),
    EXTRACT(MONTH FROM CP.CPAY_DATE),
    CP.CPAY_METHOD;


--14. The company wants to retrieve information about the transaction made with the manufacturer within a specific date range.
SELECT
    T.TRANS_DATE AS TRANSACTION_DATE,
    MD.MFR_ID,
    MD.MFR_NAME,
    SUM(T.TRANS_AMOUNT) AS TOTAL_AMOUNT_PAID
FROM
    MANUFACTURER_DETAILS MD
LEFT JOIN
    MANUFACTURER_ORDER MO ON MD.MFR_ID = MO.MFR_ID
LEFT JOIN
    MANUFACTURER_INV MI ON MO.MORDER_REF_NO = MI.MORDER_REF_NO
LEFT JOIN
    TRANSACTION T ON MI.MINV_NO = T.MINV_NO
WHERE
    T.TRANS_DATE BETWEEN TO_DATE('2023-12-01', 'YYYY-MM-DD') AND TO_DATE('2023-12-15', 'YYYY-MM-DD')
GROUP BY
    T.TRANS_DATE, MD.MFR_ID, MD.MFR_NAME;


--15. The company wants to retrieve information about unpaid invoices for orders placed by a specific coach.
SELECT
    MO.MORDER_REF_NO,
    MD.MFR_ID,
    MD.MFR_NAME,
    MO.MERC_ID,
    MI.MINV_NO,
    MI.MINV_BILL_DATE,
    MI.MINV_DUE_DATE,
    MI.MINV_DESC,
    MI.MINV_AMOUNT
FROM
    MANUFACTURER_ORDER MO
INNER JOIN
    MANUFACTURER_DETAILS MD ON MO.MFR_ID = MD.MFR_ID
INNER JOIN
    MANUFACTURER_INV MI ON MO.MORDER_REF_NO = MI.MORDER_REF_NO
LEFT JOIN
    TRANSACTION T ON MI.MINV_NO = T.MINV_NO
WHERE
    MO.CCH_ID = 'C0010'
    AND T.TRANS_ID IS NULL; 


--16. The logistic team wants to know the total quantity of each merchandise item ordered from manufacturers in a specific year and month.
SELECT
    M.MERC_ID,
    M.MERC_NAME,
    SUM(MO.MORDER_QTY) AS TOTAL_QUANTITY_ORDERED
FROM
    MERCHANDISE M
JOIN
    MANUFACTURER_ORDER MO ON M.MERC_ID = MO.MERC_ID
WHERE
    TO_CHAR(MO.MORDER_DATE, 'YYYY-MM') = '2023-12'
GROUP BY
    M.MERC_ID, M.MERC_NAME
ORDER BY
    M.MERC_ID;


--17. The company wants to generate a summary report of total sales, costs, and profits for merchandise categories in a specific year and month. The total cost and profit calculations are based on the quantity of merchandise items sold and their respective costs.
SELECT
    M.MERC_CATE,
    SUM(CP.CPAY_AMOUNT) AS TOTAL_SALES,
    SUM(
        CASE
            WHEN M.MERC_CATE = 'SUCCESS PLANNER' THEN CO.CORDER_QTY * 18
            WHEN M.MERC_CATE = 'T-SHIRT' THEN CO.CORDER_QTY * 20
            ELSE 0
        END
    ) AS TOTAL_COST,
    SUM(CP.CPAY_AMOUNT - (
        CASE
            WHEN M.MERC_CATE = 'SUCCESS PLANNER' THEN CO.CORDER_QTY * 18
            WHEN M.MERC_CATE = 'T-SHIRT' THEN CO.CORDER_QTY * 20
            ELSE 0
        END
    )) AS TOTAL_PROFIT
FROM
    MERCHANDISE M
JOIN
    CUSTOMER_ORDER CO ON M.MERC_ID = CO.MERC_ID
JOIN
    CUSTOMER_PAYMENT CP ON CO.CORDER_REF_NO = CP.CORDER_REF_NO
WHERE
    TO_CHAR(CP.CPAY_DATE, 'YYYY-MM') = '2023-12'
GROUP BY
    M.MERC_CATE;


--18. The company requires a comprehensive summary of student payments received through the 'TNGO E-Wallet' and 'FPX Online Banking' methods for a specific date range.
SELECT
    SPAY_METHOD,
    COUNT(SPAY_ID) AS NUMBER_OF_PAYMENTS,
    SUM(SPAY_AMOUNT) AS TOTAL_AMOUNT_COLLECTED
FROM
    STUDENT_PAYMENT_DETAILS
WHERE
    SPAY_METHOD IN ('TNGO E-Wallet', 'FPX Online Banking')
    AND SPAY_DATE BETWEEN TO_DATE('2023-12-01', 'YYYY-MM-DD') AND TO_DATE('2023-12-31', 'YYYY-MM-DD')
GROUP BY
    SPAY_METHOD;


