--TABLE CREATION FOR EVERY ENTITY AFTER 3NF
--ATTRIBUTE NAME , DATATYPE , CONSTRAINTS
CREATE TABLE PARENT (
    PRT_ID VARCHAR2(20) PRIMARY KEY,
    PRT_FULLNAME VARCHAR2(50) NOT NULL,
    PRT_GENDER CHAR(1) NOT NULL CHECK (PRT_GENDER IN ('M', 'F')),
    PRT_DATE_OF_BIRTH DATE NOT NULL,
    PRT_AGE INT NOT NULL CHECK (PRT_AGE >= 0),
    PRT_CONTACT_NO VARCHAR2(20) NOT NULL,
    PRT_ADDRESS VARCHAR2(255) NOT NULL,
    PRT_EMAIL VARCHAR2(50) NOT NULL CHECK (REGEXP_LIKE(PRT_EMAIL, '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}$')),
    PRT_RACE VARCHAR2(20) NOT NULL,
    RELATIONSHIP_WTH_STD VARCHAR2(20) NOT NULL,
    PRT_JOB VARCHAR2(50)
);

CREATE TABLE STUDENT (
    STUD_ID VARCHAR2(20) PRIMARY KEY,
    STUD_FULLNAME VARCHAR2(50) NOT NULL,
    STUD_GENDER CHAR(1) NOT NULL CHECK (STUD_GENDER IN ('M', 'F')),
    STUD_DATE_OF_BIRTH DATE NOT NULL,
    STUD_AGE INT NOT NULL CHECK (STUD_AGE BETWEEN 6 AND 12),
    STUD_RACE VARCHAR2(20) NOT NULL,
    STUD_SCHOOL VARCHAR2(50) NOT NULL,
    PRT_ID VARCHAR2(20) REFERENCES PARENT(PRT_ID)NOT NULL
);

CREATE TABLE PROGRAMME (
    PROG_CODE VARCHAR2(20) PRIMARY KEY,
    PROG_NAME VARCHAR2(50) NOT NULL,
    PROG_TIME VARCHAR2(20) NOT NULL,
    PROG_FEE FLOAT NOT NULL
);

CREATE TABLE REGISTRATION (
    REG_ID VARCHAR2(20) PRIMARY KEY,
    STUD_ID VARCHAR2(20) REFERENCES STUDENT(STUD_ID) NOT NULL, 
    PROG_CODE VARCHAR2(20) REFERENCES PROGRAMME(PROG_CODE) NOT NULL, 
    REG_STATUS VARCHAR2(10) NOT NULL,
    REG_DATE DATE
);

CREATE TABLE GROWTH_RECORD (
    RECORD_ID VARCHAR2(20) PRIMARY KEY,
    STUD_ID VARCHAR2(20) REFERENCES STUDENT(STUD_ID) NOT NULL,
    CONFIDENCE_LVL INT CHECK (CONFIDENCE_LVL BETWEEN 1 AND 10),
    LEADERSHIP_LVL INT CHECK (LEADERSHIP_LVL BETWEEN 1 AND 10),
    CRIC_THINKING_LVL INT CHECK (CRIC_THINKING_LVL BETWEEN 1 AND 10),
    PROB_SOLVING_LVL INT CHECK (PROB_SOLVING_LVL BETWEEN 1 AND 10),
    COURAGEOUS_LVL INT CHECK (COURAGEOUS_LVL BETWEEN 1 AND 10),
    AREA_OF_IMP VARCHAR2(255)
);

CREATE TABLE DEPARTMENT (
    DEPT_ID VARCHAR(20) PRIMARY KEY,
    DEPT_NAME VARCHAR(50) NOT NULL,
    DEPT_DESC VARCHAR (255) NOT NULL
);

CREATE TABLE COACH (
    CCH_ID VARCHAR2(20) PRIMARY KEY,
    CCH_FULLNAME VARCHAR2(50) NOT NULL,
    CCH_GENDER CHAR(1) NOT NULL CHECK (CCH_GENDER IN ('M', 'F')),
    CCH_DATE_OF_BIRTH DATE NOT NULL,
    CCH_AGE INT NOT NULL CHECK (CCH_AGE >= 0),
    CCH_EMAIL VARCHAR2(50) NOT NULL CHECK (REGEXP_LIKE(CCH_EMAIL, '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}$')),
    CCH_CONTACT_NO VARCHAR2(20) NOT NULL,
    CCH_RACE VARCHAR2(20) NOT NULL,
    CCH_ADDRESS VARCHAR2(255) NOT NULL,
    CCH_COACH_NAME VARCHAR2(50) NOT NULL,
    CCH_POSITION VARCHAR2(50) NOT NULL,
    CCH_BANK_NAME VARCHAR2(50) NOT NULL,
    CCH_BANK_ACC_NO VARCHAR2(20) NOT NULL,
    CCH_SALARY FLOAT NOT NULL, 
    DEPT_ID VARCHAR2(20) REFERENCES DEPARTMENT(DEPT_ID) NOT NULL
);

CREATE TABLE CLASS (
    CLASS_ID VARCHAR2(20) PRIMARY KEY,
    CLASS_DATE DATE NOT NULL,
    CLASS_MODULE VARCHAR2(255) NOT NULL,
    CLASS_VALUE VARCHAR2(255) NOT NULL,
    CCH_ID VARCHAR2(20) REFERENCES COACH(CCH_ID) NOT NULL,
    PROG_CODE VARCHAR(20) REFERENCES PROGRAMME(PROG_CODE)NOT NULL
);

CREATE TABLE STUDENT_INV (
    SINV_NO VARCHAR2(20) PRIMARY KEY ,
    SINV_BILL_DATE DATE NOT NULL,
    SINV_DUE_DATE DATE NOT NULL,
    CHECK (SINV_DUE_DATE >= SINV_BILL_DATE),
    SINV_DESC VARCHAR2(255),
    SINV_AMOUNT FLOAT NOT NULL,
    STUD_ID VARCHAR2(20) REFERENCES STUDENT(STUD_ID)NOT NULL, 
    PROG_CODE VARCHAR2(20) REFERENCES PROGRAMME(PROG_CODE)NOT NULL
);

CREATE TABLE STUDENT_PAYMENT_DETAILS (
    SPAY_ID VARCHAR2(20) PRIMARY KEY,
    SPAY_DATE DATE NOT NULL,
    SPAY_AMOUNT FLOAT NOT NULL,
    SPAY_METHOD VARCHAR2(50) NOT NULL,
    SPAY_PLAN VARCHAR2(20) NOT NULL
);

CREATE TABLE STUDENT_PAYMENT (
    SINV_NO VARCHAR2(20),
    SPAY_ID VARCHAR2(20)DEFAULT '-',
    PRIMARY KEY (SINV_NO, SPAY_ID),
    FOREIGN KEY (SINV_NO) REFERENCES STUDENT_INV(SINV_NO),
    FOREIGN KEY (SPAY_ID) REFERENCES STUDENT_PAYMENT_DETAILS(SPAY_ID),
    SPAY_STATUS VARCHAR2(20) NOT NULL,
    CHECK (SPAY_STATUS IN ('PAID', 'INTERIM'))
);

CREATE TABLE MERCHANDISE (
    MERC_ID VARCHAR2(20) PRIMARY KEY,
    MERC_NAME VARCHAR2(50) NOT NULL UNIQUE,
    MERC_DESC VARCHAR2(255),
    MERC_CATE VARCHAR2(50) NOT NULL,
    MERC_PRICE FLOAT NOT NULL,
    MERC_STOCK_QTY INT NOT NULL
);

CREATE TABLE CUSTOMER_DETAILS (
    CUS_ID VARCHAR2(20) PRIMARY KEY,
    CUS_NAME VARCHAR2(50) NOT NULL,
    CUS_CONTACT_NO VARCHAR2(20) NOT NULL,
    CUS_EMAIL VARCHAR2(50) CHECK (REGEXP_LIKE(CUS_EMAIL, '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}$')) NOT NULL
);

CREATE TABLE CUSTOMER_ORDER (
    CORDER_REF_NO VARCHAR2(20) PRIMARY KEY,
    CUS_ID VARCHAR2(20) REFERENCES CUSTOMER_DETAILS(CUS_ID)NOT NULL,
    CORDER_DATE DATE NOT NULL,
    MERC_ID VARCHAR2(20) REFERENCES MERCHANDISE(MERC_ID)NOT NULL,
    CORDER_QTY INT NOT NULL,
    CORDER_AMOUNT FLOAT NOT NULL,
    CCH_ID VARCHAR2(20) REFERENCES COACH(CCH_ID) NOT NULL
);

CREATE TABLE RECEIPT (
    RECEIPT_NO VARCHAR2(20) PRIMARY KEY NOT NULL,
    RECEIPT_DATE DATE NOT NULL,
    RECEIPT_DESC VARCHAR2(255) NOT NULL
);

CREATE TABLE CUSTOMER_PAYMENT (
    CPAY_ID VARCHAR2(20) PRIMARY KEY,
    CORDER_REF_NO VARCHAR2(20) REFERENCES CUSTOMER_ORDER(CORDER_REF_NO),
    CPAY_DATE DATE NOT NULL,
    CPAY_METHOD VARCHAR2(50) NOT NULL,
    CPAY_AMOUNT FLOAT NOT NULL,
    RECEIPT_NO VARCHAR2(20) REFERENCES RECEIPT(RECEIPT_NO)
);

CREATE TABLE MANUFACTURER_DETAILS (
    MFR_ID VARCHAR2(20) PRIMARY KEY,
    MFR_NAME VARCHAR2(50) NOT NULL,
    MFR_ADDRESS VARCHAR2(255) NOT NULL,
    MFR_PIC VARCHAR2(50) NOT NULL,
    MFR_CONTACT_NO VARCHAR2(20) NOT NULL
);

CREATE TABLE MANUFACTURER_ORDER (
    MORDER_REF_NO VARCHAR2(20) PRIMARY KEY NOT NULL,
    MFR_ID VARCHAR2(20) REFERENCES MANUFACTURER_DETAILS(MFR_ID),
    MERC_ID VARCHAR2(20) REFERENCES MERCHANDISE(MERC_ID),
    MORDER_DATE DATE NOT NULL,
    MORDER_QTY INT NOT NULL,
    MORDER_TOTALCOST FLOAT NOT NULL,
    CCH_ID VARCHAR2(20) REFERENCES COACH(CCH_ID)
);

CREATE TABLE MANUFACTURER_INV (
    MINV_NO VARCHAR2(20) PRIMARY KEY,
    MORDER_REF_NO VARCHAR2(20) REFERENCES MANUFACTURER_ORDER(MORDER_REF_NO) NOT NULL,
    MINV_BILL_DATE DATE NOT NULL,
    MINV_DUE_DATE DATE NOT NULL,
    MINV_DESC VARCHAR2(255) NOT NULL,
    MINV_AMOUNT FLOAT NOT NULL
    CONSTRAINT CHK_DUE_DATE CHECK (MINV_DUE_DATE >= MINV_BILL_DATE)
);

CREATE TABLE TRANSACTION (
    TRANS_ID VARCHAR2(20) PRIMARY KEY,
    MINV_NO VARCHAR2(20) REFERENCES MANUFACTURER_INV(MINV_NO),
    TRANS_METHOD VARCHAR2(50) NOT NULL,
    TRANS_AMOUNT FLOAT NOT NULL,
    TRANS_DATE DATE NOT NULL
);

--EXAMPLE OF ALTER TABLE QUERY (ALRD PERFORM SO I MAKE IT AS COMMENT)
/*ALTER TABLE CLASS
ADD (PROG_CODE VARCHAR2(20) REFERENCES PROGRAMME(PROG_CODE) NOT NULL);
*/

--EXAMPLE OF DROP TABLE QUERY (ALRD PERFORM SO I MAKE IT AS COMMENT)
/*
DROP TABLE MANUFACTURER_PAYMENT;
*/
